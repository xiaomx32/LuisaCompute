; ModuleID = '/home/miyuki/data0/repos/LuisaCompute/src/backends/fallback/fallback_builtin/fallback_device_api_wrappers.cpp'
source_filename = "/home/miyuki/data0/repos/LuisaCompute/src/backends/fallback/fallback_builtin/fallback_device_api_wrappers.cpp"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-i128:128-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

%struct.float2 = type { float, float }
%struct.float3 = type { float, float, float, [4 x i8] }
%struct.float4 = type { float, float, float, float }
%struct.PackedTextureView = type { ptr, i64 }
%struct.uint2 = type { i32, i32 }
%struct.uint3 = type { i32, i32, i32, [4 x i8] }
%struct.uint4 = type { i32, i32, i32, i32 }
%struct.int4 = type { i32, i32, i32, i32 }
%struct.TextureView = type { ptr, i64 }
%struct.BindlessSlot = type { ptr, i64, ptr, ptr }
%struct.TextureHeader = type { ptr, [3 x i16] }
%struct.SurfaceHit = type { i32, i32, %struct.float2, float, [4 x i8] }
%struct.Ray = type { [3 x float], float, [3 x float], float }
%struct.AccelView = type { ptr, ptr }
%struct.AccelInstance = type { [12 x float], i8, i8, i8, i32, ptr }

@llvm.compiler.used = appending global [86 x ptr] [ptr @luisa_fallback_wrapper_accel_instance_transform, ptr @luisa_fallback_wrapper_accel_instance_user_id, ptr @luisa_fallback_wrapper_accel_instance_visibility_mask, ptr @luisa_fallback_wrapper_accel_set_instance_opacity, ptr @luisa_fallback_wrapper_accel_set_instance_transform, ptr @luisa_fallback_wrapper_accel_set_instance_user_id, ptr @luisa_fallback_wrapper_accel_set_instance_visibility_mask, ptr @luisa_fallback_wrapper_accel_trace_any, ptr @luisa_fallback_wrapper_accel_trace_any_motion, ptr @luisa_fallback_wrapper_accel_trace_closest, ptr @luisa_fallback_wrapper_accel_trace_closest_motion, ptr @luisa_fallback_wrapper_atomic_compare_exchange_float, ptr @luisa_fallback_wrapper_atomic_compare_exchange_int, ptr @luisa_fallback_wrapper_atomic_compare_exchange_uint, ptr @luisa_fallback_wrapper_atomic_exchange_float, ptr @luisa_fallback_wrapper_atomic_exchange_int, ptr @luisa_fallback_wrapper_atomic_exchange_uint, ptr @luisa_fallback_wrapper_atomic_fetch_add_float, ptr @luisa_fallback_wrapper_atomic_fetch_add_int, ptr @luisa_fallback_wrapper_atomic_fetch_add_uint, ptr @luisa_fallback_wrapper_atomic_fetch_and_int, ptr @luisa_fallback_wrapper_atomic_fetch_and_uint, ptr @luisa_fallback_wrapper_atomic_fetch_max_float, ptr @luisa_fallback_wrapper_atomic_fetch_max_int, ptr @luisa_fallback_wrapper_atomic_fetch_max_uint, ptr @luisa_fallback_wrapper_atomic_fetch_min_float, ptr @luisa_fallback_wrapper_atomic_fetch_min_int, ptr @luisa_fallback_wrapper_atomic_fetch_min_uint, ptr @luisa_fallback_wrapper_atomic_fetch_or_int, ptr @luisa_fallback_wrapper_atomic_fetch_or_uint, ptr @luisa_fallback_wrapper_atomic_fetch_sub_float, ptr @luisa_fallback_wrapper_atomic_fetch_sub_int, ptr @luisa_fallback_wrapper_atomic_fetch_sub_uint, ptr @luisa_fallback_wrapper_atomic_fetch_xor_int, ptr @luisa_fallback_wrapper_atomic_fetch_xor_uint, ptr @luisa_fallback_wrapper_bindless_texture2d_read, ptr @luisa_fallback_wrapper_bindless_texture2d_read_level, ptr @luisa_fallback_wrapper_bindless_texture2d_sample, ptr @luisa_fallback_wrapper_bindless_texture2d_sample_grad, ptr @luisa_fallback_wrapper_bindless_texture2d_sample_grad_level, ptr @luisa_fallback_wrapper_bindless_texture2d_sample_level, ptr @luisa_fallback_wrapper_bindless_texture2d_size, ptr @luisa_fallback_wrapper_bindless_texture2d_size_level, ptr @luisa_fallback_wrapper_bindless_texture3d_read, ptr @luisa_fallback_wrapper_bindless_texture3d_read_level, ptr @luisa_fallback_wrapper_bindless_texture3d_sample, ptr @luisa_fallback_wrapper_bindless_texture3d_sample_grad, ptr @luisa_fallback_wrapper_bindless_texture3d_sample_grad_level, ptr @luisa_fallback_wrapper_bindless_texture3d_sample_level, ptr @luisa_fallback_wrapper_bindless_texture3d_size, ptr @luisa_fallback_wrapper_bindless_texture3d_size_level, ptr @luisa_fallback_wrapper_matrix2d_determinant, ptr @luisa_fallback_wrapper_matrix2d_inverse, ptr @luisa_fallback_wrapper_matrix2d_mul_matrix, ptr @luisa_fallback_wrapper_matrix2d_mul_vector, ptr @luisa_fallback_wrapper_matrix2d_outer_product, ptr @luisa_fallback_wrapper_matrix2d_transpose, ptr @luisa_fallback_wrapper_matrix3d_determinant, ptr @luisa_fallback_wrapper_matrix3d_inverse, ptr @luisa_fallback_wrapper_matrix3d_mul_matrix, ptr @luisa_fallback_wrapper_matrix3d_mul_vector, ptr @luisa_fallback_wrapper_matrix3d_outer_product, ptr @luisa_fallback_wrapper_matrix3d_transpose, ptr @luisa_fallback_wrapper_matrix4d_determinant, ptr @luisa_fallback_wrapper_matrix4d_inverse, ptr @luisa_fallback_wrapper_matrix4d_mul_matrix, ptr @luisa_fallback_wrapper_matrix4d_mul_vector, ptr @luisa_fallback_wrapper_matrix4d_outer_product, ptr @luisa_fallback_wrapper_matrix4d_transpose, ptr @luisa_fallback_wrapper_texture2d_read_float, ptr @luisa_fallback_wrapper_texture2d_read_int, ptr @luisa_fallback_wrapper_texture2d_read_uint, ptr @luisa_fallback_wrapper_texture2d_size, ptr @luisa_fallback_wrapper_texture2d_write_float, ptr @luisa_fallback_wrapper_texture2d_write_int, ptr @luisa_fallback_wrapper_texture2d_write_uint, ptr @luisa_fallback_wrapper_texture3d_read_float, ptr @luisa_fallback_wrapper_texture3d_read_int, ptr @luisa_fallback_wrapper_texture3d_read_uint, ptr @luisa_fallback_wrapper_texture3d_size, ptr @luisa_fallback_wrapper_texture3d_write_float, ptr @luisa_fallback_wrapper_texture3d_write_int, ptr @luisa_fallback_wrapper_texture3d_write_uint, ptr @luisa_fallback_wrapper_vector2d_outer_product, ptr @luisa_fallback_wrapper_vector3d_outer_product, ptr @luisa_fallback_wrapper_vector4d_outer_product], section "llvm.metadata"

; Function Attrs: alwaysinline mustprogress nofree norecurse nosync nounwind willreturn memory(argmem: readwrite) uwtable
define hidden void @luisa_fallback_wrapper_matrix2d_mul_vector(ptr nocapture noundef readonly %0, ptr nocapture noundef readonly %1, ptr nocapture noundef writeonly %2) #0 {
  %4 = load <2 x float>, ptr %0, align 8, !tbaa.struct !5
  %5 = getelementptr inbounds i8, ptr %0, i64 8
  %6 = load <2 x float>, ptr %5, align 8, !tbaa.struct !9
  %7 = load <2 x float>, ptr %1, align 8, !tbaa !6
  %8 = shufflevector <2 x float> %7, <2 x float> poison, <2 x i32> zeroinitializer
  %9 = fmul fast <2 x float> %8, %4
  %10 = shufflevector <2 x float> %7, <2 x float> poison, <2 x i32> <i32 1, i32 1>
  %11 = fmul fast <2 x float> %10, %6
  %12 = fadd fast <2 x float> %9, %11
  store <2 x float> %12, ptr %2, align 8, !tbaa !6
  ret void
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind willreturn memory(argmem: readwrite)
declare void @llvm.lifetime.start.p0(i64 immarg, ptr nocapture) #1

; Function Attrs: mustprogress nocallback nofree nounwind willreturn memory(argmem: readwrite)
declare void @llvm.memcpy.p0.p0.i64(ptr noalias nocapture writeonly, ptr noalias nocapture readonly, i64, i1 immarg) #2

; Function Attrs: mustprogress nocallback nofree nosync nounwind willreturn memory(argmem: readwrite)
declare void @llvm.lifetime.end.p0(i64 immarg, ptr nocapture) #1

; Function Attrs: alwaysinline mustprogress nofree norecurse nosync nounwind willreturn memory(argmem: readwrite) uwtable
define hidden void @luisa_fallback_wrapper_matrix2d_mul_matrix(ptr nocapture noundef readonly %0, ptr nocapture noundef readonly %1, ptr nocapture noundef writeonly %2) #0 {
  %4 = load <2 x float>, ptr %0, align 8, !tbaa.struct !5
  %5 = getelementptr inbounds i8, ptr %0, i64 8
  %6 = load <2 x float>, ptr %5, align 8, !tbaa.struct !9
  %7 = load <2 x float>, ptr %1, align 8, !tbaa !6
  %8 = shufflevector <2 x float> %7, <2 x float> poison, <2 x i32> zeroinitializer
  %9 = fmul fast <2 x float> %8, %4
  %10 = shufflevector <2 x float> %7, <2 x float> poison, <2 x i32> <i32 1, i32 1>
  %11 = fmul fast <2 x float> %10, %6
  %12 = fadd fast <2 x float> %9, %11
  store <2 x float> %12, ptr %2, align 8, !tbaa !6
  %13 = getelementptr inbounds [2 x %struct.float2], ptr %1, i64 0, i64 1
  %14 = getelementptr inbounds [2 x %struct.float2], ptr %2, i64 0, i64 1
  %15 = load <2 x float>, ptr %0, align 8, !tbaa.struct !5
  %16 = load <2 x float>, ptr %5, align 8, !tbaa.struct !9
  %17 = load <2 x float>, ptr %13, align 8, !tbaa !6
  %18 = shufflevector <2 x float> %17, <2 x float> poison, <2 x i32> zeroinitializer
  %19 = fmul fast <2 x float> %18, %15
  %20 = shufflevector <2 x float> %17, <2 x float> poison, <2 x i32> <i32 1, i32 1>
  %21 = fmul fast <2 x float> %20, %16
  %22 = fadd fast <2 x float> %19, %21
  store <2 x float> %22, ptr %14, align 8, !tbaa !6
  ret void
}

; Function Attrs: alwaysinline mustprogress nofree norecurse nosync nounwind willreturn memory(argmem: readwrite) uwtable
define hidden void @luisa_fallback_wrapper_matrix3d_mul_vector(ptr nocapture noundef readonly %0, ptr nocapture noundef readonly %1, ptr nocapture noundef writeonly %2) #0 {
  %4 = load <4 x float>, ptr %0, align 16, !tbaa.struct !10
  %5 = getelementptr inbounds i8, ptr %0, i64 16
  %6 = load <4 x float>, ptr %5, align 16, !tbaa.struct !11
  %7 = getelementptr inbounds i8, ptr %0, i64 32
  %8 = load <4 x float>, ptr %7, align 16, !tbaa.struct !5
  %9 = load <4 x float>, ptr %1, align 16
  %10 = shufflevector <4 x float> %4, <4 x float> poison, <3 x i32> <i32 0, i32 1, i32 2>
  %11 = shufflevector <4 x float> %9, <4 x float> poison, <3 x i32> zeroinitializer
  %12 = fmul fast <3 x float> %11, %10
  %13 = shufflevector <4 x float> %6, <4 x float> poison, <3 x i32> <i32 0, i32 1, i32 2>
  %14 = shufflevector <4 x float> %9, <4 x float> poison, <3 x i32> <i32 1, i32 1, i32 1>
  %15 = fmul fast <3 x float> %14, %13
  %16 = fadd fast <3 x float> %12, %15
  %17 = shufflevector <4 x float> %8, <4 x float> poison, <3 x i32> <i32 0, i32 1, i32 2>
  %18 = shufflevector <4 x float> %9, <4 x float> poison, <3 x i32> <i32 2, i32 2, i32 2>
  %19 = fmul fast <3 x float> %18, %17
  %20 = fadd fast <3 x float> %16, %19
  %21 = shufflevector <3 x float> %20, <3 x float> poison, <4 x i32> <i32 0, i32 1, i32 2, i32 poison>
  store <4 x float> %21, ptr %2, align 16, !tbaa !6
  ret void
}

; Function Attrs: alwaysinline mustprogress nofree norecurse nosync nounwind willreturn memory(argmem: readwrite) uwtable
define hidden void @luisa_fallback_wrapper_matrix3d_mul_matrix(ptr nocapture noundef readonly %0, ptr nocapture noundef readonly %1, ptr nocapture noundef writeonly %2) #0 {
  %4 = load <4 x float>, ptr %0, align 16, !tbaa.struct !10
  %5 = getelementptr inbounds i8, ptr %0, i64 16
  %6 = load <4 x float>, ptr %5, align 16, !tbaa.struct !11
  %7 = getelementptr inbounds i8, ptr %0, i64 32
  %8 = load <4 x float>, ptr %7, align 16, !tbaa.struct !5
  %9 = load <4 x float>, ptr %1, align 16
  %10 = shufflevector <4 x float> %4, <4 x float> poison, <3 x i32> <i32 0, i32 1, i32 2>
  %11 = shufflevector <4 x float> %9, <4 x float> poison, <3 x i32> zeroinitializer
  %12 = fmul fast <3 x float> %11, %10
  %13 = shufflevector <4 x float> %6, <4 x float> poison, <3 x i32> <i32 0, i32 1, i32 2>
  %14 = shufflevector <4 x float> %9, <4 x float> poison, <3 x i32> <i32 1, i32 1, i32 1>
  %15 = fmul fast <3 x float> %14, %13
  %16 = fadd fast <3 x float> %12, %15
  %17 = shufflevector <4 x float> %8, <4 x float> poison, <3 x i32> <i32 0, i32 1, i32 2>
  %18 = shufflevector <4 x float> %9, <4 x float> poison, <3 x i32> <i32 2, i32 2, i32 2>
  %19 = fmul fast <3 x float> %18, %17
  %20 = fadd fast <3 x float> %16, %19
  %21 = shufflevector <3 x float> %20, <3 x float> poison, <4 x i32> <i32 0, i32 1, i32 2, i32 poison>
  store <4 x float> %21, ptr %2, align 16, !tbaa !6
  %22 = getelementptr inbounds [3 x %struct.float3], ptr %1, i64 0, i64 1
  %23 = getelementptr inbounds [3 x %struct.float3], ptr %2, i64 0, i64 1
  %24 = load <4 x float>, ptr %0, align 16, !tbaa.struct !10
  %25 = load <4 x float>, ptr %5, align 16, !tbaa.struct !11
  %26 = load <4 x float>, ptr %7, align 16, !tbaa.struct !5
  %27 = load <4 x float>, ptr %22, align 16
  %28 = shufflevector <4 x float> %24, <4 x float> poison, <3 x i32> <i32 0, i32 1, i32 2>
  %29 = shufflevector <4 x float> %27, <4 x float> poison, <3 x i32> zeroinitializer
  %30 = fmul fast <3 x float> %29, %28
  %31 = shufflevector <4 x float> %25, <4 x float> poison, <3 x i32> <i32 0, i32 1, i32 2>
  %32 = shufflevector <4 x float> %27, <4 x float> poison, <3 x i32> <i32 1, i32 1, i32 1>
  %33 = fmul fast <3 x float> %32, %31
  %34 = fadd fast <3 x float> %30, %33
  %35 = shufflevector <4 x float> %26, <4 x float> poison, <3 x i32> <i32 0, i32 1, i32 2>
  %36 = shufflevector <4 x float> %27, <4 x float> poison, <3 x i32> <i32 2, i32 2, i32 2>
  %37 = fmul fast <3 x float> %36, %35
  %38 = fadd fast <3 x float> %34, %37
  %39 = shufflevector <3 x float> %38, <3 x float> poison, <4 x i32> <i32 0, i32 1, i32 2, i32 poison>
  store <4 x float> %39, ptr %23, align 16, !tbaa !6
  %40 = getelementptr inbounds [3 x %struct.float3], ptr %1, i64 0, i64 2
  %41 = getelementptr inbounds [3 x %struct.float3], ptr %2, i64 0, i64 2
  %42 = load <4 x float>, ptr %0, align 16, !tbaa.struct !10
  %43 = load <4 x float>, ptr %5, align 16, !tbaa.struct !11
  %44 = load <4 x float>, ptr %7, align 16, !tbaa.struct !5
  %45 = load <4 x float>, ptr %40, align 16
  %46 = shufflevector <4 x float> %42, <4 x float> poison, <3 x i32> <i32 0, i32 1, i32 2>
  %47 = shufflevector <4 x float> %45, <4 x float> poison, <3 x i32> zeroinitializer
  %48 = fmul fast <3 x float> %47, %46
  %49 = shufflevector <4 x float> %43, <4 x float> poison, <3 x i32> <i32 0, i32 1, i32 2>
  %50 = shufflevector <4 x float> %45, <4 x float> poison, <3 x i32> <i32 1, i32 1, i32 1>
  %51 = fmul fast <3 x float> %50, %49
  %52 = fadd fast <3 x float> %48, %51
  %53 = shufflevector <4 x float> %44, <4 x float> poison, <3 x i32> <i32 0, i32 1, i32 2>
  %54 = shufflevector <4 x float> %45, <4 x float> poison, <3 x i32> <i32 2, i32 2, i32 2>
  %55 = fmul fast <3 x float> %54, %53
  %56 = fadd fast <3 x float> %52, %55
  %57 = shufflevector <3 x float> %56, <3 x float> poison, <4 x i32> <i32 0, i32 1, i32 2, i32 poison>
  store <4 x float> %57, ptr %41, align 16, !tbaa !6
  ret void
}

; Function Attrs: alwaysinline mustprogress nofree norecurse nosync nounwind willreturn memory(argmem: readwrite) uwtable
define hidden void @luisa_fallback_wrapper_matrix4d_mul_vector(ptr nocapture noundef readonly %0, ptr nocapture noundef readonly %1, ptr nocapture noundef writeonly %2) #0 {
  %4 = load <4 x float>, ptr %0, align 16, !tbaa.struct !12
  %5 = getelementptr inbounds i8, ptr %0, i64 16
  %6 = load <4 x float>, ptr %5, align 16, !tbaa.struct !10
  %7 = getelementptr inbounds i8, ptr %0, i64 32
  %8 = load <4 x float>, ptr %7, align 16, !tbaa.struct !11
  %9 = getelementptr inbounds i8, ptr %0, i64 48
  %10 = load <4 x float>, ptr %9, align 16, !tbaa.struct !5
  %11 = load <4 x float>, ptr %1, align 16, !tbaa !6
  %12 = shufflevector <4 x float> %11, <4 x float> poison, <4 x i32> zeroinitializer
  %13 = fmul fast <4 x float> %12, %4
  %14 = shufflevector <4 x float> %11, <4 x float> poison, <4 x i32> <i32 1, i32 1, i32 1, i32 1>
  %15 = fmul fast <4 x float> %14, %6
  %16 = fadd fast <4 x float> %13, %15
  %17 = shufflevector <4 x float> %11, <4 x float> poison, <4 x i32> <i32 2, i32 2, i32 2, i32 2>
  %18 = fmul fast <4 x float> %17, %8
  %19 = fadd fast <4 x float> %16, %18
  %20 = shufflevector <4 x float> %11, <4 x float> poison, <4 x i32> <i32 3, i32 3, i32 3, i32 3>
  %21 = fmul fast <4 x float> %20, %10
  %22 = fadd fast <4 x float> %19, %21
  store <4 x float> %22, ptr %2, align 16, !tbaa !6
  ret void
}

; Function Attrs: alwaysinline mustprogress nofree norecurse nosync nounwind willreturn memory(argmem: readwrite) uwtable
define hidden void @luisa_fallback_wrapper_matrix4d_mul_matrix(ptr nocapture noundef readonly %0, ptr nocapture noundef readonly %1, ptr nocapture noundef writeonly %2) #0 {
  %4 = load <4 x float>, ptr %0, align 16, !tbaa.struct !12
  %5 = getelementptr inbounds i8, ptr %0, i64 16
  %6 = load <4 x float>, ptr %5, align 16, !tbaa.struct !10
  %7 = getelementptr inbounds i8, ptr %0, i64 32
  %8 = load <4 x float>, ptr %7, align 16, !tbaa.struct !11
  %9 = getelementptr inbounds i8, ptr %0, i64 48
  %10 = load <4 x float>, ptr %9, align 16, !tbaa.struct !5
  %11 = load <4 x float>, ptr %1, align 16, !tbaa !6
  %12 = shufflevector <4 x float> %11, <4 x float> poison, <4 x i32> zeroinitializer
  %13 = fmul fast <4 x float> %12, %4
  %14 = shufflevector <4 x float> %11, <4 x float> poison, <4 x i32> <i32 1, i32 1, i32 1, i32 1>
  %15 = fmul fast <4 x float> %14, %6
  %16 = fadd fast <4 x float> %13, %15
  %17 = shufflevector <4 x float> %11, <4 x float> poison, <4 x i32> <i32 2, i32 2, i32 2, i32 2>
  %18 = fmul fast <4 x float> %17, %8
  %19 = fadd fast <4 x float> %16, %18
  %20 = shufflevector <4 x float> %11, <4 x float> poison, <4 x i32> <i32 3, i32 3, i32 3, i32 3>
  %21 = fmul fast <4 x float> %20, %10
  %22 = fadd fast <4 x float> %19, %21
  store <4 x float> %22, ptr %2, align 16, !tbaa !6
  %23 = getelementptr inbounds [4 x %struct.float4], ptr %1, i64 0, i64 1
  %24 = getelementptr inbounds [4 x %struct.float4], ptr %2, i64 0, i64 1
  %25 = load <4 x float>, ptr %0, align 16, !tbaa.struct !12
  %26 = load <4 x float>, ptr %5, align 16, !tbaa.struct !10
  %27 = load <4 x float>, ptr %7, align 16, !tbaa.struct !11
  %28 = load <4 x float>, ptr %9, align 16, !tbaa.struct !5
  %29 = load <4 x float>, ptr %23, align 16, !tbaa !6
  %30 = shufflevector <4 x float> %29, <4 x float> poison, <4 x i32> zeroinitializer
  %31 = fmul fast <4 x float> %30, %25
  %32 = shufflevector <4 x float> %29, <4 x float> poison, <4 x i32> <i32 1, i32 1, i32 1, i32 1>
  %33 = fmul fast <4 x float> %32, %26
  %34 = fadd fast <4 x float> %31, %33
  %35 = shufflevector <4 x float> %29, <4 x float> poison, <4 x i32> <i32 2, i32 2, i32 2, i32 2>
  %36 = fmul fast <4 x float> %35, %27
  %37 = fadd fast <4 x float> %34, %36
  %38 = shufflevector <4 x float> %29, <4 x float> poison, <4 x i32> <i32 3, i32 3, i32 3, i32 3>
  %39 = fmul fast <4 x float> %38, %28
  %40 = fadd fast <4 x float> %37, %39
  store <4 x float> %40, ptr %24, align 16, !tbaa !6
  %41 = getelementptr inbounds [4 x %struct.float4], ptr %1, i64 0, i64 2
  %42 = getelementptr inbounds [4 x %struct.float4], ptr %2, i64 0, i64 2
  %43 = load <4 x float>, ptr %0, align 16, !tbaa.struct !12
  %44 = load <4 x float>, ptr %5, align 16, !tbaa.struct !10
  %45 = load <4 x float>, ptr %7, align 16, !tbaa.struct !11
  %46 = load <4 x float>, ptr %9, align 16, !tbaa.struct !5
  %47 = load <4 x float>, ptr %41, align 16, !tbaa !6
  %48 = shufflevector <4 x float> %47, <4 x float> poison, <4 x i32> zeroinitializer
  %49 = fmul fast <4 x float> %48, %43
  %50 = shufflevector <4 x float> %47, <4 x float> poison, <4 x i32> <i32 1, i32 1, i32 1, i32 1>
  %51 = fmul fast <4 x float> %50, %44
  %52 = fadd fast <4 x float> %49, %51
  %53 = shufflevector <4 x float> %47, <4 x float> poison, <4 x i32> <i32 2, i32 2, i32 2, i32 2>
  %54 = fmul fast <4 x float> %53, %45
  %55 = fadd fast <4 x float> %52, %54
  %56 = shufflevector <4 x float> %47, <4 x float> poison, <4 x i32> <i32 3, i32 3, i32 3, i32 3>
  %57 = fmul fast <4 x float> %56, %46
  %58 = fadd fast <4 x float> %55, %57
  store <4 x float> %58, ptr %42, align 16, !tbaa !6
  %59 = getelementptr inbounds [4 x %struct.float4], ptr %1, i64 0, i64 3
  %60 = getelementptr inbounds [4 x %struct.float4], ptr %2, i64 0, i64 3
  %61 = load <4 x float>, ptr %0, align 16, !tbaa.struct !12
  %62 = load <4 x float>, ptr %5, align 16, !tbaa.struct !10
  %63 = load <4 x float>, ptr %7, align 16, !tbaa.struct !11
  %64 = load <4 x float>, ptr %9, align 16, !tbaa.struct !5
  %65 = load <4 x float>, ptr %59, align 16, !tbaa !6
  %66 = shufflevector <4 x float> %65, <4 x float> poison, <4 x i32> zeroinitializer
  %67 = fmul fast <4 x float> %66, %61
  %68 = shufflevector <4 x float> %65, <4 x float> poison, <4 x i32> <i32 1, i32 1, i32 1, i32 1>
  %69 = fmul fast <4 x float> %68, %62
  %70 = fadd fast <4 x float> %67, %69
  %71 = shufflevector <4 x float> %65, <4 x float> poison, <4 x i32> <i32 2, i32 2, i32 2, i32 2>
  %72 = fmul fast <4 x float> %71, %63
  %73 = fadd fast <4 x float> %70, %72
  %74 = shufflevector <4 x float> %65, <4 x float> poison, <4 x i32> <i32 3, i32 3, i32 3, i32 3>
  %75 = fmul fast <4 x float> %74, %64
  %76 = fadd fast <4 x float> %73, %75
  store <4 x float> %76, ptr %60, align 16, !tbaa !6
  ret void
}

; Function Attrs: alwaysinline mustprogress nofree norecurse nosync nounwind willreturn memory(argmem: readwrite) uwtable
define hidden void @luisa_fallback_wrapper_matrix2d_transpose(ptr nocapture noundef readonly %0, ptr nocapture noundef writeonly %1) #0 {
  %3 = load <2 x float>, ptr %0, align 8, !tbaa.struct !5
  %4 = getelementptr inbounds i8, ptr %0, i64 8
  %5 = load <2 x float>, ptr %4, align 8, !tbaa.struct !9
  %6 = shufflevector <2 x float> %3, <2 x float> %5, <2 x i32> <i32 0, i32 2>
  store <2 x float> %6, ptr %1, align 8, !tbaa !6
  %7 = shufflevector <2 x float> %3, <2 x float> %5, <2 x i32> <i32 1, i32 3>
  %8 = getelementptr inbounds [2 x <2 x float>], ptr %1, i64 0, i64 1
  store <2 x float> %7, ptr %8, align 8, !tbaa !6
  ret void
}

; Function Attrs: alwaysinline mustprogress nofree norecurse nosync nounwind willreturn memory(argmem: readwrite) uwtable
define hidden void @luisa_fallback_wrapper_matrix3d_transpose(ptr nocapture noundef readonly %0, ptr nocapture noundef writeonly %1) #0 {
  %3 = load <3 x float>, ptr %0, align 16, !tbaa.struct !10
  %4 = getelementptr inbounds i8, ptr %0, i64 16
  %5 = load <3 x float>, ptr %4, align 16, !tbaa.struct !11
  %6 = getelementptr inbounds i8, ptr %0, i64 32
  %7 = load <3 x float>, ptr %6, align 16, !tbaa.struct !5
  %8 = shufflevector <3 x float> %3, <3 x float> %5, <3 x i32> <i32 0, i32 3, i32 poison>
  %9 = shufflevector <3 x float> %8, <3 x float> %7, <3 x i32> <i32 0, i32 1, i32 3>
  %10 = shufflevector <3 x float> %9, <3 x float> poison, <4 x i32> <i32 0, i32 1, i32 2, i32 poison>
  store <4 x float> %10, ptr %1, align 16, !tbaa !6
  %11 = shufflevector <3 x float> %3, <3 x float> %5, <3 x i32> <i32 1, i32 4, i32 poison>
  %12 = shufflevector <3 x float> %11, <3 x float> %7, <3 x i32> <i32 0, i32 1, i32 4>
  %13 = getelementptr inbounds [3 x <3 x float>], ptr %1, i64 0, i64 1
  %14 = shufflevector <3 x float> %12, <3 x float> poison, <4 x i32> <i32 0, i32 1, i32 2, i32 poison>
  store <4 x float> %14, ptr %13, align 16, !tbaa !6
  %15 = shufflevector <3 x float> %3, <3 x float> %5, <3 x i32> <i32 2, i32 5, i32 poison>
  %16 = shufflevector <3 x float> %15, <3 x float> %7, <3 x i32> <i32 0, i32 1, i32 5>
  %17 = getelementptr inbounds [3 x <3 x float>], ptr %1, i64 0, i64 2
  %18 = shufflevector <3 x float> %16, <3 x float> poison, <4 x i32> <i32 0, i32 1, i32 2, i32 poison>
  store <4 x float> %18, ptr %17, align 16, !tbaa !6
  ret void
}

; Function Attrs: alwaysinline mustprogress nofree norecurse nosync nounwind willreturn memory(argmem: readwrite) uwtable
define hidden void @luisa_fallback_wrapper_matrix4d_transpose(ptr nocapture noundef readonly %0, ptr nocapture noundef writeonly %1) #0 {
  %3 = load <4 x float>, ptr %0, align 16, !tbaa.struct !12
  %4 = getelementptr inbounds i8, ptr %0, i64 16
  %5 = load <4 x float>, ptr %4, align 16, !tbaa.struct !10
  %6 = getelementptr inbounds i8, ptr %0, i64 32
  %7 = load <4 x float>, ptr %6, align 16, !tbaa.struct !11
  %8 = getelementptr inbounds i8, ptr %0, i64 48
  %9 = load <4 x float>, ptr %8, align 16, !tbaa.struct !5
  %10 = shufflevector <4 x float> %3, <4 x float> %5, <4 x i32> <i32 0, i32 4, i32 poison, i32 poison>
  %11 = shufflevector <4 x float> %10, <4 x float> %7, <4 x i32> <i32 0, i32 1, i32 4, i32 poison>
  %12 = shufflevector <4 x float> %11, <4 x float> %9, <4 x i32> <i32 0, i32 1, i32 2, i32 4>
  store <4 x float> %12, ptr %1, align 16, !tbaa !6
  %13 = shufflevector <4 x float> %3, <4 x float> %5, <4 x i32> <i32 1, i32 5, i32 poison, i32 poison>
  %14 = shufflevector <4 x float> %13, <4 x float> %7, <4 x i32> <i32 0, i32 1, i32 5, i32 poison>
  %15 = shufflevector <4 x float> %14, <4 x float> %9, <4 x i32> <i32 0, i32 1, i32 2, i32 5>
  %16 = getelementptr inbounds [4 x <4 x float>], ptr %1, i64 0, i64 1
  store <4 x float> %15, ptr %16, align 16, !tbaa !6
  %17 = shufflevector <4 x float> %3, <4 x float> %5, <4 x i32> <i32 2, i32 6, i32 poison, i32 poison>
  %18 = shufflevector <4 x float> %17, <4 x float> %7, <4 x i32> <i32 0, i32 1, i32 6, i32 poison>
  %19 = shufflevector <4 x float> %18, <4 x float> %9, <4 x i32> <i32 0, i32 1, i32 2, i32 6>
  %20 = getelementptr inbounds [4 x <4 x float>], ptr %1, i64 0, i64 2
  store <4 x float> %19, ptr %20, align 16, !tbaa !6
  %21 = shufflevector <4 x float> %3, <4 x float> %5, <4 x i32> <i32 3, i32 7, i32 poison, i32 poison>
  %22 = shufflevector <4 x float> %21, <4 x float> %7, <4 x i32> <i32 0, i32 1, i32 7, i32 poison>
  %23 = shufflevector <4 x float> %22, <4 x float> %9, <4 x i32> <i32 0, i32 1, i32 2, i32 7>
  %24 = getelementptr inbounds [4 x <4 x float>], ptr %1, i64 0, i64 3
  store <4 x float> %23, ptr %24, align 16, !tbaa !6
  ret void
}

; Function Attrs: alwaysinline mustprogress nofree norecurse nosync nounwind willreturn memory(argmem: readwrite) uwtable
define hidden void @luisa_fallback_wrapper_vector2d_outer_product(ptr nocapture noundef readonly %0, ptr nocapture noundef readonly %1, ptr nocapture noundef writeonly %2) #0 {
  %4 = load <2 x float>, ptr %0, align 8, !tbaa !6
  %5 = load <2 x float>, ptr %1, align 8, !tbaa !6
  %6 = shufflevector <2 x float> %5, <2 x float> poison, <2 x i32> zeroinitializer
  %7 = fmul fast <2 x float> %6, %4
  store <2 x float> %7, ptr %2, align 8, !tbaa !6
  %8 = shufflevector <2 x float> %5, <2 x float> poison, <2 x i32> <i32 1, i32 1>
  %9 = fmul fast <2 x float> %8, %4
  %10 = getelementptr inbounds [2 x <2 x float>], ptr %2, i64 0, i64 1
  store <2 x float> %9, ptr %10, align 8, !tbaa !6
  ret void
}

; Function Attrs: alwaysinline mustprogress nofree norecurse nosync nounwind willreturn memory(argmem: readwrite) uwtable
define hidden void @luisa_fallback_wrapper_vector3d_outer_product(ptr nocapture noundef readonly %0, ptr nocapture noundef readonly %1, ptr nocapture noundef writeonly %2) #0 {
  %4 = load <4 x float>, ptr %0, align 16
  %5 = load <4 x float>, ptr %1, align 16
  %6 = shufflevector <4 x float> %4, <4 x float> poison, <3 x i32> <i32 0, i32 1, i32 2>
  %7 = shufflevector <4 x float> %5, <4 x float> poison, <3 x i32> zeroinitializer
  %8 = fmul fast <3 x float> %7, %6
  %9 = shufflevector <3 x float> %8, <3 x float> poison, <4 x i32> <i32 0, i32 1, i32 2, i32 poison>
  store <4 x float> %9, ptr %2, align 16, !tbaa !6
  %10 = shufflevector <4 x float> %5, <4 x float> poison, <3 x i32> <i32 1, i32 1, i32 1>
  %11 = fmul fast <3 x float> %10, %6
  %12 = getelementptr inbounds [3 x <3 x float>], ptr %2, i64 0, i64 1
  %13 = shufflevector <3 x float> %11, <3 x float> poison, <4 x i32> <i32 0, i32 1, i32 2, i32 poison>
  store <4 x float> %13, ptr %12, align 16, !tbaa !6
  %14 = shufflevector <4 x float> %5, <4 x float> poison, <3 x i32> <i32 2, i32 2, i32 2>
  %15 = fmul fast <3 x float> %14, %6
  %16 = getelementptr inbounds [3 x <3 x float>], ptr %2, i64 0, i64 2
  %17 = shufflevector <3 x float> %15, <3 x float> poison, <4 x i32> <i32 0, i32 1, i32 2, i32 poison>
  store <4 x float> %17, ptr %16, align 16, !tbaa !6
  ret void
}

; Function Attrs: alwaysinline mustprogress nofree norecurse nosync nounwind willreturn memory(argmem: readwrite) uwtable
define hidden void @luisa_fallback_wrapper_vector4d_outer_product(ptr nocapture noundef readonly %0, ptr nocapture noundef readonly %1, ptr nocapture noundef writeonly %2) #0 {
  %4 = load <4 x float>, ptr %0, align 16, !tbaa !6
  %5 = load <4 x float>, ptr %1, align 16, !tbaa !6
  %6 = shufflevector <4 x float> %5, <4 x float> poison, <4 x i32> zeroinitializer
  %7 = fmul fast <4 x float> %6, %4
  store <4 x float> %7, ptr %2, align 16, !tbaa !6
  %8 = shufflevector <4 x float> %5, <4 x float> poison, <4 x i32> <i32 1, i32 1, i32 1, i32 1>
  %9 = fmul fast <4 x float> %8, %4
  %10 = getelementptr inbounds [4 x <4 x float>], ptr %2, i64 0, i64 1
  store <4 x float> %9, ptr %10, align 16, !tbaa !6
  %11 = shufflevector <4 x float> %5, <4 x float> poison, <4 x i32> <i32 2, i32 2, i32 2, i32 2>
  %12 = fmul fast <4 x float> %11, %4
  %13 = getelementptr inbounds [4 x <4 x float>], ptr %2, i64 0, i64 2
  store <4 x float> %12, ptr %13, align 16, !tbaa !6
  %14 = shufflevector <4 x float> %5, <4 x float> poison, <4 x i32> <i32 3, i32 3, i32 3, i32 3>
  %15 = fmul fast <4 x float> %14, %4
  %16 = getelementptr inbounds [4 x <4 x float>], ptr %2, i64 0, i64 3
  store <4 x float> %15, ptr %16, align 16, !tbaa !6
  ret void
}

; Function Attrs: alwaysinline mustprogress nofree norecurse nosync nounwind willreturn memory(argmem: readwrite) uwtable
define hidden void @luisa_fallback_wrapper_matrix2d_outer_product(ptr nocapture noundef readonly %0, ptr nocapture noundef readonly %1, ptr nocapture noundef writeonly %2) #0 {
  %4 = load <2 x float>, ptr %1, align 8, !tbaa.struct !5
  %5 = getelementptr inbounds i8, ptr %1, i64 8
  %6 = load <2 x float>, ptr %5, align 8, !tbaa.struct !9
  %7 = load <2 x float>, ptr %0, align 8, !tbaa.struct !5
  %8 = getelementptr inbounds i8, ptr %0, i64 8
  %9 = load <2 x float>, ptr %8, align 8, !tbaa.struct !9
  %10 = shufflevector <2 x float> %4, <2 x float> poison, <2 x i32> zeroinitializer
  %11 = fmul fast <2 x float> %7, %10
  %12 = shufflevector <2 x float> %6, <2 x float> poison, <2 x i32> zeroinitializer
  %13 = fmul fast <2 x float> %9, %12
  %14 = fadd fast <2 x float> %13, %11
  store <2 x float> %14, ptr %2, align 8, !tbaa !6
  %15 = getelementptr inbounds [2 x %struct.float2], ptr %2, i64 0, i64 1
  %16 = load <2 x float>, ptr %0, align 8, !tbaa.struct !5
  %17 = load <2 x float>, ptr %8, align 8, !tbaa.struct !9
  %18 = shufflevector <2 x float> %4, <2 x float> poison, <2 x i32> <i32 1, i32 1>
  %19 = fmul fast <2 x float> %16, %18
  %20 = shufflevector <2 x float> %6, <2 x float> poison, <2 x i32> <i32 1, i32 1>
  %21 = fmul fast <2 x float> %17, %20
  %22 = fadd fast <2 x float> %21, %19
  store <2 x float> %22, ptr %15, align 8, !tbaa !6
  ret void
}

; Function Attrs: alwaysinline mustprogress nofree norecurse nosync nounwind willreturn memory(argmem: readwrite) uwtable
define hidden void @luisa_fallback_wrapper_matrix3d_outer_product(ptr nocapture noundef readonly %0, ptr nocapture noundef readonly %1, ptr nocapture noundef writeonly %2) #0 {
  %4 = load <3 x float>, ptr %1, align 16, !tbaa.struct !10
  %5 = getelementptr inbounds i8, ptr %1, i64 16
  %6 = load <3 x float>, ptr %5, align 16, !tbaa.struct !11
  %7 = getelementptr inbounds i8, ptr %1, i64 32
  %8 = load <3 x float>, ptr %7, align 16, !tbaa.struct !5
  %9 = load <4 x float>, ptr %0, align 16, !tbaa.struct !10
  %10 = getelementptr inbounds i8, ptr %0, i64 16
  %11 = load <4 x float>, ptr %10, align 16, !tbaa.struct !11
  %12 = getelementptr inbounds i8, ptr %0, i64 32
  %13 = load <4 x float>, ptr %12, align 16, !tbaa.struct !5
  %14 = shufflevector <4 x float> %9, <4 x float> poison, <3 x i32> <i32 0, i32 1, i32 2>
  %15 = shufflevector <3 x float> %4, <3 x float> poison, <3 x i32> zeroinitializer
  %16 = fmul fast <3 x float> %14, %15
  %17 = shufflevector <4 x float> %11, <4 x float> poison, <3 x i32> <i32 0, i32 1, i32 2>
  %18 = shufflevector <3 x float> %6, <3 x float> poison, <3 x i32> zeroinitializer
  %19 = fmul fast <3 x float> %17, %18
  %20 = fadd fast <3 x float> %19, %16
  %21 = shufflevector <4 x float> %13, <4 x float> poison, <3 x i32> <i32 0, i32 1, i32 2>
  %22 = shufflevector <3 x float> %8, <3 x float> poison, <3 x i32> zeroinitializer
  %23 = fmul fast <3 x float> %21, %22
  %24 = fadd fast <3 x float> %20, %23
  %25 = shufflevector <3 x float> %24, <3 x float> poison, <4 x i32> <i32 0, i32 1, i32 2, i32 poison>
  store <4 x float> %25, ptr %2, align 16, !tbaa !6
  %26 = getelementptr inbounds [3 x %struct.float3], ptr %2, i64 0, i64 1
  %27 = load <4 x float>, ptr %0, align 16, !tbaa.struct !10
  %28 = load <4 x float>, ptr %10, align 16, !tbaa.struct !11
  %29 = load <4 x float>, ptr %12, align 16, !tbaa.struct !5
  %30 = shufflevector <4 x float> %27, <4 x float> poison, <3 x i32> <i32 0, i32 1, i32 2>
  %31 = shufflevector <3 x float> %4, <3 x float> poison, <3 x i32> <i32 1, i32 1, i32 1>
  %32 = fmul fast <3 x float> %30, %31
  %33 = shufflevector <4 x float> %28, <4 x float> poison, <3 x i32> <i32 0, i32 1, i32 2>
  %34 = shufflevector <3 x float> %6, <3 x float> poison, <3 x i32> <i32 1, i32 1, i32 1>
  %35 = fmul fast <3 x float> %33, %34
  %36 = fadd fast <3 x float> %35, %32
  %37 = shufflevector <4 x float> %29, <4 x float> poison, <3 x i32> <i32 0, i32 1, i32 2>
  %38 = shufflevector <3 x float> %8, <3 x float> poison, <3 x i32> <i32 1, i32 1, i32 1>
  %39 = fmul fast <3 x float> %37, %38
  %40 = fadd fast <3 x float> %36, %39
  %41 = shufflevector <3 x float> %40, <3 x float> poison, <4 x i32> <i32 0, i32 1, i32 2, i32 poison>
  store <4 x float> %41, ptr %26, align 16, !tbaa !6
  %42 = getelementptr inbounds [3 x %struct.float3], ptr %2, i64 0, i64 2
  %43 = load <4 x float>, ptr %0, align 16, !tbaa.struct !10
  %44 = load <4 x float>, ptr %10, align 16, !tbaa.struct !11
  %45 = load <4 x float>, ptr %12, align 16, !tbaa.struct !5
  %46 = shufflevector <4 x float> %43, <4 x float> poison, <3 x i32> <i32 0, i32 1, i32 2>
  %47 = shufflevector <3 x float> %4, <3 x float> poison, <3 x i32> <i32 2, i32 2, i32 2>
  %48 = fmul fast <3 x float> %46, %47
  %49 = shufflevector <4 x float> %44, <4 x float> poison, <3 x i32> <i32 0, i32 1, i32 2>
  %50 = shufflevector <3 x float> %6, <3 x float> poison, <3 x i32> <i32 2, i32 2, i32 2>
  %51 = fmul fast <3 x float> %49, %50
  %52 = fadd fast <3 x float> %51, %48
  %53 = shufflevector <4 x float> %45, <4 x float> poison, <3 x i32> <i32 0, i32 1, i32 2>
  %54 = shufflevector <3 x float> %8, <3 x float> poison, <3 x i32> <i32 2, i32 2, i32 2>
  %55 = fmul fast <3 x float> %53, %54
  %56 = fadd fast <3 x float> %52, %55
  %57 = shufflevector <3 x float> %56, <3 x float> poison, <4 x i32> <i32 0, i32 1, i32 2, i32 poison>
  store <4 x float> %57, ptr %42, align 16, !tbaa !6
  ret void
}

; Function Attrs: alwaysinline mustprogress nofree norecurse nosync nounwind willreturn memory(argmem: readwrite) uwtable
define hidden void @luisa_fallback_wrapper_matrix4d_outer_product(ptr nocapture noundef readonly %0, ptr nocapture noundef readonly %1, ptr nocapture noundef writeonly %2) #0 {
  %4 = load <4 x float>, ptr %1, align 16, !tbaa.struct !12
  %5 = getelementptr inbounds i8, ptr %1, i64 16
  %6 = load <4 x float>, ptr %5, align 16, !tbaa.struct !10
  %7 = getelementptr inbounds i8, ptr %1, i64 32
  %8 = load <4 x float>, ptr %7, align 16, !tbaa.struct !11
  %9 = getelementptr inbounds i8, ptr %1, i64 48
  %10 = load <4 x float>, ptr %9, align 16, !tbaa.struct !5
  %11 = load <4 x float>, ptr %0, align 16, !tbaa.struct !12
  %12 = getelementptr inbounds i8, ptr %0, i64 16
  %13 = load <4 x float>, ptr %12, align 16, !tbaa.struct !10
  %14 = getelementptr inbounds i8, ptr %0, i64 32
  %15 = load <4 x float>, ptr %14, align 16, !tbaa.struct !11
  %16 = getelementptr inbounds i8, ptr %0, i64 48
  %17 = load <4 x float>, ptr %16, align 16, !tbaa.struct !5
  %18 = shufflevector <4 x float> %4, <4 x float> poison, <4 x i32> zeroinitializer
  %19 = fmul fast <4 x float> %11, %18
  %20 = shufflevector <4 x float> %6, <4 x float> poison, <4 x i32> zeroinitializer
  %21 = fmul fast <4 x float> %13, %20
  %22 = fadd fast <4 x float> %21, %19
  %23 = shufflevector <4 x float> %8, <4 x float> poison, <4 x i32> zeroinitializer
  %24 = fmul fast <4 x float> %15, %23
  %25 = fadd fast <4 x float> %22, %24
  %26 = shufflevector <4 x float> %10, <4 x float> poison, <4 x i32> zeroinitializer
  %27 = fmul fast <4 x float> %17, %26
  %28 = fadd fast <4 x float> %25, %27
  store <4 x float> %28, ptr %2, align 16, !tbaa !6
  %29 = getelementptr inbounds [4 x %struct.float4], ptr %2, i64 0, i64 1
  %30 = load <4 x float>, ptr %0, align 16, !tbaa.struct !12
  %31 = load <4 x float>, ptr %12, align 16, !tbaa.struct !10
  %32 = load <4 x float>, ptr %14, align 16, !tbaa.struct !11
  %33 = load <4 x float>, ptr %16, align 16, !tbaa.struct !5
  %34 = shufflevector <4 x float> %4, <4 x float> poison, <4 x i32> <i32 1, i32 1, i32 1, i32 1>
  %35 = fmul fast <4 x float> %30, %34
  %36 = shufflevector <4 x float> %6, <4 x float> poison, <4 x i32> <i32 1, i32 1, i32 1, i32 1>
  %37 = fmul fast <4 x float> %31, %36
  %38 = fadd fast <4 x float> %37, %35
  %39 = shufflevector <4 x float> %8, <4 x float> poison, <4 x i32> <i32 1, i32 1, i32 1, i32 1>
  %40 = fmul fast <4 x float> %32, %39
  %41 = fadd fast <4 x float> %38, %40
  %42 = shufflevector <4 x float> %10, <4 x float> poison, <4 x i32> <i32 1, i32 1, i32 1, i32 1>
  %43 = fmul fast <4 x float> %33, %42
  %44 = fadd fast <4 x float> %41, %43
  store <4 x float> %44, ptr %29, align 16, !tbaa !6
  %45 = getelementptr inbounds [4 x %struct.float4], ptr %2, i64 0, i64 2
  %46 = load <4 x float>, ptr %0, align 16, !tbaa.struct !12
  %47 = load <4 x float>, ptr %12, align 16, !tbaa.struct !10
  %48 = load <4 x float>, ptr %14, align 16, !tbaa.struct !11
  %49 = load <4 x float>, ptr %16, align 16, !tbaa.struct !5
  %50 = shufflevector <4 x float> %4, <4 x float> poison, <4 x i32> <i32 2, i32 2, i32 2, i32 2>
  %51 = fmul fast <4 x float> %46, %50
  %52 = shufflevector <4 x float> %6, <4 x float> poison, <4 x i32> <i32 2, i32 2, i32 2, i32 2>
  %53 = fmul fast <4 x float> %47, %52
  %54 = fadd fast <4 x float> %53, %51
  %55 = shufflevector <4 x float> %8, <4 x float> poison, <4 x i32> <i32 2, i32 2, i32 2, i32 2>
  %56 = fmul fast <4 x float> %48, %55
  %57 = fadd fast <4 x float> %54, %56
  %58 = shufflevector <4 x float> %10, <4 x float> poison, <4 x i32> <i32 2, i32 2, i32 2, i32 2>
  %59 = fmul fast <4 x float> %49, %58
  %60 = fadd fast <4 x float> %57, %59
  store <4 x float> %60, ptr %45, align 16, !tbaa !6
  %61 = getelementptr inbounds [4 x %struct.float4], ptr %2, i64 0, i64 3
  %62 = load <4 x float>, ptr %0, align 16, !tbaa.struct !12
  %63 = load <4 x float>, ptr %12, align 16, !tbaa.struct !10
  %64 = load <4 x float>, ptr %14, align 16, !tbaa.struct !11
  %65 = load <4 x float>, ptr %16, align 16, !tbaa.struct !5
  %66 = shufflevector <4 x float> %4, <4 x float> poison, <4 x i32> <i32 3, i32 3, i32 3, i32 3>
  %67 = fmul fast <4 x float> %62, %66
  %68 = shufflevector <4 x float> %6, <4 x float> poison, <4 x i32> <i32 3, i32 3, i32 3, i32 3>
  %69 = fmul fast <4 x float> %63, %68
  %70 = fadd fast <4 x float> %69, %67
  %71 = shufflevector <4 x float> %8, <4 x float> poison, <4 x i32> <i32 3, i32 3, i32 3, i32 3>
  %72 = fmul fast <4 x float> %64, %71
  %73 = fadd fast <4 x float> %70, %72
  %74 = shufflevector <4 x float> %10, <4 x float> poison, <4 x i32> <i32 3, i32 3, i32 3, i32 3>
  %75 = fmul fast <4 x float> %65, %74
  %76 = fadd fast <4 x float> %73, %75
  store <4 x float> %76, ptr %61, align 16, !tbaa !6
  ret void
}

; Function Attrs: alwaysinline mustprogress nofree norecurse nosync nounwind willreturn memory(argmem: read) uwtable
define hidden nofpclass(nan inf) float @luisa_fallback_wrapper_matrix2d_determinant(ptr nocapture noundef readonly %0) #3 {
  %2 = load <2 x float>, ptr %0, align 8, !tbaa.struct !5
  %3 = getelementptr inbounds i8, ptr %0, i64 8
  %4 = load <2 x float>, ptr %3, align 8, !tbaa.struct !9
  %5 = shufflevector <2 x float> %4, <2 x float> poison, <2 x i32> <i32 1, i32 0>
  %6 = fmul fast <2 x float> %5, %2
  %7 = shufflevector <2 x float> %6, <2 x float> poison, <2 x i32> <i32 1, i32 poison>
  %8 = fsub fast <2 x float> %6, %7
  %9 = extractelement <2 x float> %8, i64 0
  ret float %9
}

; Function Attrs: alwaysinline mustprogress nofree norecurse nosync nounwind willreturn memory(argmem: read) uwtable
define hidden nofpclass(nan inf) float @luisa_fallback_wrapper_matrix3d_determinant(ptr nocapture noundef readonly %0) #3 {
  %2 = load <3 x float>, ptr %0, align 16, !tbaa.struct !10
  %3 = getelementptr inbounds i8, ptr %0, i64 16
  %4 = load <3 x float>, ptr %3, align 16, !tbaa.struct !11
  %5 = getelementptr inbounds i8, ptr %0, i64 32
  %6 = load <3 x float>, ptr %5, align 16, !tbaa.struct !5
  %7 = shufflevector <3 x float> %6, <3 x float> poison, <3 x i32> <i32 poison, i32 2, i32 poison>
  %8 = fmul fast <3 x float> %7, %2
  %9 = shufflevector <3 x float> %2, <3 x float> poison, <3 x i32> <i32 poison, i32 2, i32 poison>
  %10 = fmul fast <3 x float> %6, %9
  %11 = fsub fast <3 x float> %10, %8
  %12 = shufflevector <3 x float> %11, <3 x float> poison, <3 x i32> <i32 1, i32 poison, i32 poison>
  %13 = fmul fast <3 x float> %12, %4
  %14 = extractelement <3 x float> %13, i64 0
  %15 = shufflevector <3 x float> %4, <3 x float> poison, <2 x i32> <i32 1, i32 2>
  %16 = shufflevector <3 x float> %6, <3 x float> %2, <2 x i32> <i32 2, i32 4>
  %17 = fmul fast <2 x float> %15, %16
  %18 = shufflevector <3 x float> %2, <3 x float> %6, <2 x i32> <i32 2, i32 4>
  %19 = fmul fast <2 x float> %15, %18
  %20 = shufflevector <2 x float> %19, <2 x float> poison, <2 x i32> <i32 1, i32 0>
  %21 = fsub fast <2 x float> %17, %20
  %22 = shufflevector <3 x float> %2, <3 x float> %6, <2 x i32> <i32 0, i32 3>
  %23 = fmul fast <2 x float> %21, %22
  %24 = shufflevector <2 x float> %23, <2 x float> poison, <2 x i32> <i32 1, i32 poison>
  %25 = fadd fast <2 x float> %23, %24
  %26 = extractelement <2 x float> %25, i64 0
  %27 = fadd fast float %26, %14
  ret float %27
}

; Function Attrs: alwaysinline mustprogress nofree norecurse nosync nounwind willreturn memory(argmem: read) uwtable
define hidden nofpclass(nan inf) float @luisa_fallback_wrapper_matrix4d_determinant(ptr nocapture noundef readonly %0) #3 {
  %2 = load <4 x float>, ptr %0, align 16, !tbaa.struct !12
  %3 = getelementptr inbounds i8, ptr %0, i64 16
  %4 = load <4 x float>, ptr %3, align 16, !tbaa.struct !10
  %5 = getelementptr inbounds i8, ptr %0, i64 48
  %6 = load <4 x float>, ptr %5, align 16, !tbaa.struct !5
  %7 = getelementptr inbounds i8, ptr %0, i64 44
  %8 = load float, ptr %7, align 4
  %9 = shufflevector <4 x float> %6, <4 x float> poison, <4 x i32> <i32 poison, i32 poison, i32 3, i32 poison>
  %10 = shufflevector <4 x float> %6, <4 x float> %4, <4 x i32> <i32 3, i32 3, i32 6, i32 6>
  %11 = shufflevector <4 x float> %6, <4 x float> %4, <4 x i32> <i32 2, i32 2, i32 7, i32 7>
  %12 = getelementptr inbounds i8, ptr %0, i64 36
  %13 = load <2 x float>, ptr %12, align 4
  %14 = shufflevector <2 x float> %13, <2 x float> poison, <4 x i32> <i32 0, i32 1, i32 poison, i32 1>
  %15 = shufflevector <4 x float> %9, <4 x float> %14, <4 x i32> <i32 5, i32 poison, i32 2, i32 poison>
  %16 = insertelement <4 x float> %15, float %8, i64 3
  %17 = shufflevector <4 x float> %16, <4 x float> poison, <4 x i32> <i32 0, i32 0, i32 2, i32 3>
  %18 = fmul fast <4 x float> %17, %10
  %19 = shufflevector <4 x float> %6, <4 x float> %16, <4 x i32> <i32 7, i32 7, i32 2, i32 4>
  %20 = fmul fast <4 x float> %19, %11
  %21 = fsub fast <4 x float> %18, %20
  %22 = shufflevector <4 x float> %14, <4 x float> %9, <4 x i32> <i32 0, i32 poison, i32 6, i32 poison>
  %23 = insertelement <4 x float> %22, float %8, i64 3
  %24 = shufflevector <4 x float> %23, <4 x float> poison, <4 x i32> <i32 0, i32 0, i32 2, i32 3>
  %25 = shufflevector <4 x float> %6, <4 x float> %4, <4 x i32> <i32 3, i32 3, i32 5, i32 5>
  %26 = fmul fast <4 x float> %24, %25
  %27 = shufflevector <4 x float> %6, <4 x float> %23, <4 x i32> <i32 7, i32 7, i32 1, i32 4>
  %28 = shufflevector <4 x float> %6, <4 x float> %4, <4 x i32> <i32 1, i32 1, i32 7, i32 7>
  %29 = fmul fast <4 x float> %27, %28
  %30 = fsub fast <4 x float> %26, %29
  %31 = shufflevector <4 x float> %14, <4 x float> %6, <4 x i32> <i32 0, i32 5, i32 6, i32 3>
  %32 = shufflevector <4 x float> %31, <4 x float> poison, <4 x i32> <i32 0, i32 0, i32 2, i32 3>
  %33 = shufflevector <4 x float> %6, <4 x float> %4, <4 x i32> <i32 2, i32 2, i32 5, i32 5>
  %34 = fmul fast <4 x float> %32, %33
  %35 = shufflevector <4 x float> %6, <4 x float> %31, <4 x i32> <i32 7, i32 7, i32 1, i32 4>
  %36 = shufflevector <4 x float> %6, <4 x float> %4, <4 x i32> <i32 1, i32 1, i32 6, i32 6>
  %37 = fmul fast <4 x float> %35, %36
  %38 = fsub fast <4 x float> %34, %37
  %39 = shufflevector <4 x float> %4, <4 x float> %2, <4 x i32> <i32 1, i32 5, i32 5, i32 5>
  %40 = shufflevector <4 x float> %4, <4 x float> %2, <4 x i32> <i32 2, i32 6, i32 6, i32 6>
  %41 = shufflevector <4 x float> %4, <4 x float> %2, <4 x i32> <i32 3, i32 7, i32 7, i32 7>
  %42 = fmul fast <4 x float> %21, %39
  %43 = fmul fast <4 x float> %38, %41
  %44 = fadd fast <4 x float> %43, %42
  %45 = fmul fast <4 x float> %40, %30
  %46 = fsub fast <4 x float> %44, %45
  %47 = fmul fast <4 x float> %2, <float 1.000000e+00, float -1.000000e+00, float 1.000000e+00, float -1.000000e+00>
  %48 = fmul fast <4 x float> %47, %46
  %49 = tail call fast float @llvm.vector.reduce.fadd.v4f32(float -0.000000e+00, <4 x float> %48)
  ret float %49
}

; Function Attrs: alwaysinline mustprogress nofree norecurse nosync nounwind willreturn memory(argmem: readwrite) uwtable
define hidden void @luisa_fallback_wrapper_matrix2d_inverse(ptr nocapture noundef readonly %0, ptr nocapture noundef writeonly %1) #0 {
  %3 = load <2 x float>, ptr %0, align 8, !tbaa.struct !5
  %4 = getelementptr inbounds i8, ptr %0, i64 8
  %5 = load <2 x float>, ptr %4, align 8, !tbaa.struct !9
  %6 = shufflevector <2 x float> %5, <2 x float> poison, <2 x i32> <i32 1, i32 poison>
  %7 = fmul fast <2 x float> %6, %3
  %8 = extractelement <2 x float> %7, i64 0
  %9 = extractelement <2 x float> %5, i64 0
  %10 = extractelement <2 x float> %3, i64 1
  %11 = fmul fast float %9, %10
  %12 = fsub fast float %8, %11
  %13 = fdiv fast float 1.000000e+00, %12
  %14 = fneg fast float %10
  %15 = fneg fast float %9
  %16 = insertelement <4 x float> poison, float %13, i64 0
  %17 = shufflevector <4 x float> %16, <4 x float> poison, <4 x i32> zeroinitializer
  %18 = shufflevector <2 x float> %5, <2 x float> %3, <4 x i32> <i32 1, i32 poison, i32 poison, i32 2>
  %19 = insertelement <4 x float> %18, float %14, i64 1
  %20 = insertelement <4 x float> %19, float %15, i64 2
  %21 = fmul fast <4 x float> %17, %20
  store <4 x float> %21, ptr %1, align 8, !tbaa !13
  ret void
}

; Function Attrs: alwaysinline mustprogress nofree norecurse nosync nounwind willreturn memory(argmem: readwrite) uwtable
define hidden void @luisa_fallback_wrapper_matrix3d_inverse(ptr nocapture noundef readonly %0, ptr nocapture noundef writeonly %1) #0 {
  %3 = load <3 x float>, ptr %0, align 16, !tbaa.struct !10
  %4 = getelementptr inbounds i8, ptr %0, i64 16
  %5 = load <3 x float>, ptr %4, align 16, !tbaa.struct !11
  %6 = getelementptr inbounds i8, ptr %0, i64 32
  %7 = load <3 x float>, ptr %6, align 16, !tbaa.struct !5
  %8 = extractelement <3 x float> %3, i64 0
  %9 = extractelement <3 x float> %5, i64 1
  %10 = extractelement <3 x float> %5, i64 2
  %11 = extractelement <3 x float> %5, i64 0
  %12 = extractelement <3 x float> %3, i64 1
  %13 = extractelement <3 x float> %3, i64 2
  %14 = extractelement <3 x float> %7, i64 0
  %15 = fmul fast float %10, %12
  %16 = fmul fast float %9, %13
  %17 = fsub fast float %15, %16
  %18 = fmul fast float %17, %14
  %19 = shufflevector <3 x float> %7, <3 x float> poison, <2 x i32> <i32 1, i32 2>
  %20 = shufflevector <3 x float> %5, <3 x float> %3, <2 x i32> <i32 2, i32 4>
  %21 = fmul fast <2 x float> %19, %20
  %22 = shufflevector <3 x float> %3, <3 x float> %5, <2 x i32> <i32 2, i32 4>
  %23 = fmul fast <2 x float> %19, %22
  %24 = shufflevector <2 x float> %23, <2 x float> poison, <2 x i32> <i32 1, i32 0>
  %25 = fsub fast <2 x float> %24, %21
  %26 = extractelement <2 x float> %25, i64 0
  %27 = fmul fast float %26, %8
  %28 = extractelement <2 x float> %25, i64 1
  %29 = fmul fast float %28, %11
  %30 = fadd fast float %27, %18
  %31 = fadd fast float %30, %29
  %32 = fdiv fast float 1.000000e+00, %31
  %33 = insertelement <2 x float> poison, float %32, i64 0
  %34 = shufflevector <2 x float> %33, <2 x float> poison, <2 x i32> zeroinitializer
  %35 = fmul fast <2 x float> %34, %25
  store <2 x float> %35, ptr %1, align 16, !tbaa !13
  %36 = fmul fast float %32, %17
  %37 = getelementptr inbounds %struct.float3, ptr %1, i64 0, i32 2
  store float %36, ptr %37, align 8, !tbaa !15
  %38 = getelementptr inbounds [3 x %struct.float3], ptr %1, i64 0, i64 1
  %39 = shufflevector <3 x float> %7, <3 x float> poison, <2 x i32> <i32 0, i32 2>
  %40 = shufflevector <3 x float> %5, <3 x float> %3, <2 x i32> <i32 2, i32 3>
  %41 = fmul fast <2 x float> %39, %40
  %42 = shufflevector <3 x float> %7, <3 x float> poison, <2 x i32> <i32 2, i32 0>
  %43 = shufflevector <3 x float> %5, <3 x float> %3, <2 x i32> <i32 0, i32 5>
  %44 = fmul fast <2 x float> %42, %43
  %45 = fsub fast <2 x float> %41, %44
  %46 = fmul fast <2 x float> %34, %45
  store <2 x float> %46, ptr %38, align 16, !tbaa !13
  %47 = fmul fast float %11, %13
  %48 = fmul fast float %10, %8
  %49 = fsub fast float %47, %48
  %50 = fmul fast float %32, %49
  %51 = getelementptr inbounds [3 x %struct.float3], ptr %1, i64 0, i64 1, i32 2
  store float %50, ptr %51, align 8, !tbaa !15
  %52 = getelementptr inbounds [3 x %struct.float3], ptr %1, i64 0, i64 2
  %53 = shufflevector <3 x float> %7, <3 x float> poison, <2 x i32> <i32 0, i32 1>
  %54 = shufflevector <3 x float> %3, <3 x float> %5, <2 x i32> <i32 1, i32 3>
  %55 = fmul fast <2 x float> %53, %54
  %56 = shufflevector <2 x float> %55, <2 x float> poison, <2 x i32> <i32 1, i32 0>
  %57 = shufflevector <3 x float> %5, <3 x float> %3, <2 x i32> <i32 1, i32 3>
  %58 = fmul fast <2 x float> %53, %57
  %59 = fsub fast <2 x float> %56, %58
  %60 = fmul fast <2 x float> %34, %59
  store <2 x float> %60, ptr %52, align 16, !tbaa !13
  %61 = fmul fast float %9, %8
  %62 = fmul fast float %11, %12
  %63 = fsub fast float %61, %62
  %64 = fmul fast float %32, %63
  %65 = getelementptr inbounds [3 x %struct.float3], ptr %1, i64 0, i64 2, i32 2
  store float %64, ptr %65, align 8, !tbaa !15
  ret void
}

; Function Attrs: alwaysinline mustprogress nofree norecurse nosync nounwind willreturn memory(argmem: readwrite) uwtable
define hidden void @luisa_fallback_wrapper_matrix4d_inverse(ptr nocapture noundef readonly %0, ptr nocapture noundef writeonly %1) #0 {
  %3 = load <4 x float>, ptr %0, align 16, !tbaa.struct !12
  %4 = getelementptr inbounds i8, ptr %0, i64 16
  %5 = load <4 x float>, ptr %4, align 16, !tbaa.struct !10
  %6 = getelementptr inbounds i8, ptr %0, i64 32
  %7 = load <4 x float>, ptr %6, align 16, !tbaa.struct !11
  %8 = getelementptr inbounds i8, ptr %0, i64 48
  %9 = load <4 x float>, ptr %8, align 16, !tbaa.struct !5
  %10 = shufflevector <4 x float> %9, <4 x float> %7, <4 x i32> <i32 3, i32 3, i32 3, i32 7>
  %11 = shufflevector <4 x float> %7, <4 x float> %5, <4 x i32> <i32 2, i32 2, i32 6, i32 6>
  %12 = fmul fast <4 x float> %10, %11
  %13 = shufflevector <4 x float> %9, <4 x float> %7, <4 x i32> <i32 2, i32 2, i32 2, i32 6>
  %14 = shufflevector <4 x float> %7, <4 x float> %5, <4 x i32> <i32 3, i32 3, i32 7, i32 7>
  %15 = fmul fast <4 x float> %13, %14
  %16 = fsub fast <4 x float> %12, %15
  %17 = shufflevector <4 x float> %7, <4 x float> %5, <4 x i32> <i32 1, i32 1, i32 5, i32 5>
  %18 = fmul fast <4 x float> %10, %17
  %19 = shufflevector <4 x float> %9, <4 x float> %7, <4 x i32> <i32 1, i32 1, i32 1, i32 5>
  %20 = fmul fast <4 x float> %19, %14
  %21 = fsub fast <4 x float> %18, %20
  %22 = fmul fast <4 x float> %13, %17
  %23 = fmul fast <4 x float> %19, %11
  %24 = fsub fast <4 x float> %22, %23
  %25 = shufflevector <4 x float> %7, <4 x float> %5, <4 x i32> <i32 0, i32 0, i32 4, i32 4>
  %26 = fmul fast <4 x float> %10, %25
  %27 = shufflevector <4 x float> %9, <4 x float> %7, <4 x i32> <i32 0, i32 0, i32 0, i32 4>
  %28 = fmul fast <4 x float> %27, %14
  %29 = fsub fast <4 x float> %26, %28
  %30 = fmul fast <4 x float> %13, %25
  %31 = fmul fast <4 x float> %27, %11
  %32 = fsub fast <4 x float> %30, %31
  %33 = fmul fast <4 x float> %19, %25
  %34 = fmul fast <4 x float> %27, %17
  %35 = fsub fast <4 x float> %33, %34
  %36 = shufflevector <4 x float> %5, <4 x float> %3, <4 x i32> <i32 0, i32 4, i32 4, i32 4>
  %37 = shufflevector <4 x float> %5, <4 x float> %3, <4 x i32> <i32 1, i32 5, i32 5, i32 5>
  %38 = shufflevector <4 x float> %5, <4 x float> %3, <4 x i32> <i32 2, i32 6, i32 6, i32 6>
  %39 = shufflevector <4 x float> %5, <4 x float> %3, <4 x i32> <i32 3, i32 7, i32 7, i32 7>
  %40 = fmul fast <4 x float> %16, %37
  %41 = fmul fast <4 x float> %24, %39
  %42 = fadd fast <4 x float> %41, %40
  %43 = fmul fast <4 x float> %38, %21
  %44 = fsub fast <4 x float> %42, %43
  %45 = fmul fast <4 x float> %16, %36
  %46 = fmul fast <4 x float> %32, %39
  %47 = fadd fast <4 x float> %46, %45
  %48 = fmul fast <4 x float> %38, %29
  %49 = fsub fast <4 x float> %47, %48
  %50 = fmul fast <4 x float> %21, %36
  %51 = fmul fast <4 x float> %35, %39
  %52 = fadd fast <4 x float> %51, %50
  %53 = fmul fast <4 x float> %37, %29
  %54 = fsub fast <4 x float> %52, %53
  %55 = fmul fast <4 x float> %24, %36
  %56 = fmul fast <4 x float> %35, %38
  %57 = fadd fast <4 x float> %56, %55
  %58 = fmul fast <4 x float> %37, %32
  %59 = fsub fast <4 x float> %57, %58
  %60 = fmul fast <4 x float> %44, <float 1.000000e+00, float -1.000000e+00, float 1.000000e+00, float -1.000000e+00>
  %61 = fmul fast <4 x float> %49, <float -1.000000e+00, float 1.000000e+00, float -1.000000e+00, float 1.000000e+00>
  %62 = fmul fast <4 x float> %54, <float 1.000000e+00, float -1.000000e+00, float 1.000000e+00, float -1.000000e+00>
  %63 = fmul fast <4 x float> %59, <float -1.000000e+00, float 1.000000e+00, float -1.000000e+00, float 1.000000e+00>
  %64 = shufflevector <4 x float> %60, <4 x float> %61, <4 x i32> <i32 0, i32 4, i32 poison, i32 poison>
  %65 = shufflevector <4 x float> %64, <4 x float> %62, <4 x i32> <i32 0, i32 1, i32 4, i32 poison>
  %66 = shufflevector <4 x float> %65, <4 x float> %63, <4 x i32> <i32 0, i32 1, i32 2, i32 4>
  %67 = fmul fast <4 x float> %66, %3
  %68 = tail call fast float @llvm.vector.reduce.fadd.v4f32(float -0.000000e+00, <4 x float> %67)
  %69 = fdiv fast float 1.000000e+00, %68
  %70 = insertelement <4 x float> poison, float %69, i64 0
  %71 = shufflevector <4 x float> %70, <4 x float> poison, <4 x i32> zeroinitializer
  %72 = fmul fast <4 x float> %71, %60
  store <4 x float> %72, ptr %1, align 16, !tbaa !6
  %73 = fmul fast <4 x float> %71, %61
  %74 = getelementptr inbounds [4 x <4 x float>], ptr %1, i64 0, i64 1
  store <4 x float> %73, ptr %74, align 16, !tbaa !6
  %75 = fmul fast <4 x float> %71, %62
  %76 = getelementptr inbounds [4 x <4 x float>], ptr %1, i64 0, i64 2
  store <4 x float> %75, ptr %76, align 16, !tbaa !6
  %77 = fmul fast <4 x float> %71, %63
  %78 = getelementptr inbounds [4 x <4 x float>], ptr %1, i64 0, i64 3
  store <4 x float> %77, ptr %78, align 16, !tbaa !6
  ret void
}

; Function Attrs: alwaysinline mustprogress nounwind uwtable
define hidden void @luisa_fallback_wrapper_texture2d_read_int(ptr nocapture noundef readonly %0, ptr nocapture noundef readonly %1, ptr nocapture noundef writeonly %2) #4 {
  %4 = load ptr, ptr %0, align 16, !tbaa !17
  %5 = getelementptr inbounds %struct.PackedTextureView, ptr %0, i64 0, i32 1
  %6 = load i64, ptr %5, align 8, !tbaa !21
  %7 = load i32, ptr %1, align 8, !tbaa !22
  %8 = getelementptr inbounds %struct.uint2, ptr %1, i64 0, i32 1
  %9 = load i32, ptr %8, align 4, !tbaa !25
  %10 = tail call { i64, i64 } @luisa_fallback_texture2d_read_int(ptr noundef %4, i64 noundef %6, i32 noundef %7, i32 noundef %9) #12
  %11 = extractvalue { i64, i64 } %10, 0
  %12 = extractvalue { i64, i64 } %10, 1
  store i64 %11, ptr %2, align 16, !tbaa.struct !26
  %13 = getelementptr inbounds i8, ptr %2, i64 8
  store i64 %12, ptr %13, align 8, !tbaa.struct !28
  ret void
}

; Function Attrs: nounwind
declare { i64, i64 } @luisa_fallback_texture2d_read_int(ptr noundef, i64 noundef, i32 noundef, i32 noundef) local_unnamed_addr #5

; Function Attrs: alwaysinline mustprogress nounwind uwtable
define hidden void @luisa_fallback_wrapper_texture2d_read_uint(ptr nocapture noundef readonly %0, ptr nocapture noundef readonly %1, ptr nocapture noundef writeonly %2) #4 {
  %4 = load ptr, ptr %0, align 16, !tbaa !17
  %5 = getelementptr inbounds %struct.PackedTextureView, ptr %0, i64 0, i32 1
  %6 = load i64, ptr %5, align 8, !tbaa !21
  %7 = load i32, ptr %1, align 8, !tbaa !22
  %8 = getelementptr inbounds %struct.uint2, ptr %1, i64 0, i32 1
  %9 = load i32, ptr %8, align 4, !tbaa !25
  %10 = tail call { i64, i64 } @luisa_fallback_texture2d_read_uint(ptr noundef %4, i64 noundef %6, i32 noundef %7, i32 noundef %9) #12
  %11 = extractvalue { i64, i64 } %10, 0
  %12 = extractvalue { i64, i64 } %10, 1
  store i64 %11, ptr %2, align 16, !tbaa.struct !26
  %13 = getelementptr inbounds i8, ptr %2, i64 8
  store i64 %12, ptr %13, align 8, !tbaa.struct !28
  ret void
}

; Function Attrs: nounwind
declare { i64, i64 } @luisa_fallback_texture2d_read_uint(ptr noundef, i64 noundef, i32 noundef, i32 noundef) local_unnamed_addr #5

; Function Attrs: alwaysinline mustprogress nounwind uwtable
define hidden void @luisa_fallback_wrapper_texture2d_read_float(ptr nocapture noundef readonly %0, ptr nocapture noundef readonly %1, ptr nocapture noundef writeonly %2) #6 {
  %4 = load ptr, ptr %0, align 16, !tbaa !17
  %5 = getelementptr inbounds %struct.PackedTextureView, ptr %0, i64 0, i32 1
  %6 = load i64, ptr %5, align 8, !tbaa !21
  %7 = load i32, ptr %1, align 8, !tbaa !22
  %8 = getelementptr inbounds %struct.uint2, ptr %1, i64 0, i32 1
  %9 = load i32, ptr %8, align 4, !tbaa !25
  %10 = tail call { <2 x float>, <2 x float> } @luisa_fallback_texture2d_read_float(ptr noundef %4, i64 noundef %6, i32 noundef %7, i32 noundef %9) #12
  %11 = extractvalue { <2 x float>, <2 x float> } %10, 0
  %12 = extractvalue { <2 x float>, <2 x float> } %10, 1
  store <2 x float> %11, ptr %2, align 16, !tbaa.struct !29
  %13 = getelementptr inbounds i8, ptr %2, i64 8
  store <2 x float> %12, ptr %13, align 8, !tbaa.struct !30
  ret void
}

; Function Attrs: nounwind
declare { <2 x float>, <2 x float> } @luisa_fallback_texture2d_read_float(ptr noundef, i64 noundef, i32 noundef, i32 noundef) local_unnamed_addr #5

; Function Attrs: alwaysinline mustprogress nounwind uwtable
define hidden void @luisa_fallback_wrapper_texture2d_write_float(ptr nocapture noundef readonly %0, ptr nocapture noundef readonly %1, ptr nocapture noundef readonly %2) #6 {
  %4 = load ptr, ptr %0, align 16, !tbaa !17
  %5 = getelementptr inbounds %struct.PackedTextureView, ptr %0, i64 0, i32 1
  %6 = load i64, ptr %5, align 8, !tbaa !21
  %7 = load i32, ptr %1, align 8, !tbaa !22
  %8 = getelementptr inbounds %struct.uint2, ptr %1, i64 0, i32 1
  %9 = load i32, ptr %8, align 4, !tbaa !25
  %10 = load <2 x float>, ptr %2, align 16, !tbaa.struct !29
  %11 = getelementptr inbounds i8, ptr %2, i64 8
  %12 = load <2 x float>, ptr %11, align 8, !tbaa.struct !30
  tail call void @luisa_fallback_texture2d_write_float(ptr noundef %4, i64 noundef %6, i32 noundef %7, i32 noundef %9, <2 x float> %10, <2 x float> %12) #12
  ret void
}

; Function Attrs: nounwind
declare void @luisa_fallback_texture2d_write_float(ptr noundef, i64 noundef, i32 noundef, i32 noundef, <2 x float>, <2 x float>) local_unnamed_addr #5

; Function Attrs: alwaysinline mustprogress nounwind uwtable
define hidden void @luisa_fallback_wrapper_texture2d_write_uint(ptr nocapture noundef readonly %0, ptr nocapture noundef readonly %1, ptr nocapture noundef readonly %2) #4 {
  %4 = load ptr, ptr %0, align 16, !tbaa !17
  %5 = getelementptr inbounds %struct.PackedTextureView, ptr %0, i64 0, i32 1
  %6 = load i64, ptr %5, align 8, !tbaa !21
  %7 = load i32, ptr %1, align 8, !tbaa !22
  %8 = getelementptr inbounds %struct.uint2, ptr %1, i64 0, i32 1
  %9 = load i32, ptr %8, align 4, !tbaa !25
  %10 = load i64, ptr %2, align 16, !tbaa.struct !26
  %11 = getelementptr inbounds i8, ptr %2, i64 8
  %12 = load i64, ptr %11, align 8, !tbaa.struct !28
  tail call void @luisa_fallback_texture2d_write_uint(ptr noundef %4, i64 noundef %6, i32 noundef %7, i32 noundef %9, i64 %10, i64 %12) #12
  ret void
}

; Function Attrs: nounwind
declare void @luisa_fallback_texture2d_write_uint(ptr noundef, i64 noundef, i32 noundef, i32 noundef, i64, i64) local_unnamed_addr #5

; Function Attrs: alwaysinline mustprogress nounwind uwtable
define hidden void @luisa_fallback_wrapper_texture2d_write_int(ptr nocapture noundef readonly %0, ptr nocapture noundef readonly %1, ptr nocapture noundef readonly %2) #4 {
  %4 = load ptr, ptr %0, align 16, !tbaa !17
  %5 = getelementptr inbounds %struct.PackedTextureView, ptr %0, i64 0, i32 1
  %6 = load i64, ptr %5, align 8, !tbaa !21
  %7 = load i32, ptr %1, align 8, !tbaa !22
  %8 = getelementptr inbounds %struct.uint2, ptr %1, i64 0, i32 1
  %9 = load i32, ptr %8, align 4, !tbaa !25
  %10 = load i64, ptr %2, align 16, !tbaa.struct !26
  %11 = getelementptr inbounds i8, ptr %2, i64 8
  %12 = load i64, ptr %11, align 8, !tbaa.struct !28
  tail call void @luisa_fallback_texture2d_write_int(ptr noundef %4, i64 noundef %6, i32 noundef %7, i32 noundef %9, i64 %10, i64 %12) #12
  ret void
}

; Function Attrs: nounwind
declare void @luisa_fallback_texture2d_write_int(ptr noundef, i64 noundef, i32 noundef, i32 noundef, i64, i64) local_unnamed_addr #5

; Function Attrs: alwaysinline mustprogress nounwind uwtable
define hidden void @luisa_fallback_wrapper_texture3d_read_int(ptr nocapture noundef readonly %0, ptr nocapture noundef readonly %1, ptr nocapture noundef writeonly %2) #4 {
  %4 = load ptr, ptr %0, align 16, !tbaa !17
  %5 = getelementptr inbounds %struct.PackedTextureView, ptr %0, i64 0, i32 1
  %6 = load i64, ptr %5, align 8, !tbaa !21
  %7 = load i32, ptr %1, align 16, !tbaa !31
  %8 = getelementptr inbounds %struct.uint3, ptr %1, i64 0, i32 1
  %9 = load i32, ptr %8, align 4, !tbaa !33
  %10 = getelementptr inbounds %struct.uint3, ptr %1, i64 0, i32 2
  %11 = load i32, ptr %10, align 8, !tbaa !34
  %12 = tail call { i64, i64 } @luisa_fallback_texture3d_read_int(ptr noundef %4, i64 noundef %6, i32 noundef %7, i32 noundef %9, i32 noundef %11) #12
  %13 = extractvalue { i64, i64 } %12, 0
  %14 = extractvalue { i64, i64 } %12, 1
  store i64 %13, ptr %2, align 16, !tbaa.struct !26
  %15 = getelementptr inbounds i8, ptr %2, i64 8
  store i64 %14, ptr %15, align 8, !tbaa.struct !28
  ret void
}

; Function Attrs: nounwind
declare { i64, i64 } @luisa_fallback_texture3d_read_int(ptr noundef, i64 noundef, i32 noundef, i32 noundef, i32 noundef) local_unnamed_addr #5

; Function Attrs: alwaysinline mustprogress nounwind uwtable
define hidden void @luisa_fallback_wrapper_texture3d_read_uint(ptr nocapture noundef readonly %0, ptr nocapture noundef readonly %1, ptr nocapture noundef writeonly %2) #4 {
  %4 = load ptr, ptr %0, align 16, !tbaa !17
  %5 = getelementptr inbounds %struct.PackedTextureView, ptr %0, i64 0, i32 1
  %6 = load i64, ptr %5, align 8, !tbaa !21
  %7 = load i32, ptr %1, align 16, !tbaa !31
  %8 = getelementptr inbounds %struct.uint3, ptr %1, i64 0, i32 1
  %9 = load i32, ptr %8, align 4, !tbaa !33
  %10 = getelementptr inbounds %struct.uint3, ptr %1, i64 0, i32 2
  %11 = load i32, ptr %10, align 8, !tbaa !34
  %12 = tail call { i64, i64 } @luisa_fallback_texture3d_read_uint(ptr noundef %4, i64 noundef %6, i32 noundef %7, i32 noundef %9, i32 noundef %11) #12
  %13 = extractvalue { i64, i64 } %12, 0
  %14 = extractvalue { i64, i64 } %12, 1
  store i64 %13, ptr %2, align 16, !tbaa.struct !26
  %15 = getelementptr inbounds i8, ptr %2, i64 8
  store i64 %14, ptr %15, align 8, !tbaa.struct !28
  ret void
}

; Function Attrs: nounwind
declare { i64, i64 } @luisa_fallback_texture3d_read_uint(ptr noundef, i64 noundef, i32 noundef, i32 noundef, i32 noundef) local_unnamed_addr #5

; Function Attrs: alwaysinline mustprogress nounwind uwtable
define hidden void @luisa_fallback_wrapper_texture3d_read_float(ptr nocapture noundef readonly %0, ptr nocapture noundef readonly %1, ptr nocapture noundef writeonly %2) #6 {
  %4 = load ptr, ptr %0, align 16, !tbaa !17
  %5 = getelementptr inbounds %struct.PackedTextureView, ptr %0, i64 0, i32 1
  %6 = load i64, ptr %5, align 8, !tbaa !21
  %7 = load i32, ptr %1, align 16, !tbaa !31
  %8 = getelementptr inbounds %struct.uint3, ptr %1, i64 0, i32 1
  %9 = load i32, ptr %8, align 4, !tbaa !33
  %10 = getelementptr inbounds %struct.uint3, ptr %1, i64 0, i32 2
  %11 = load i32, ptr %10, align 8, !tbaa !34
  %12 = tail call { <2 x float>, <2 x float> } @luisa_fallback_texture3d_read_float(ptr noundef %4, i64 noundef %6, i32 noundef %7, i32 noundef %9, i32 noundef %11) #12
  %13 = extractvalue { <2 x float>, <2 x float> } %12, 0
  %14 = extractvalue { <2 x float>, <2 x float> } %12, 1
  store <2 x float> %13, ptr %2, align 16, !tbaa.struct !29
  %15 = getelementptr inbounds i8, ptr %2, i64 8
  store <2 x float> %14, ptr %15, align 8, !tbaa.struct !30
  ret void
}

; Function Attrs: nounwind
declare { <2 x float>, <2 x float> } @luisa_fallback_texture3d_read_float(ptr noundef, i64 noundef, i32 noundef, i32 noundef, i32 noundef) local_unnamed_addr #5

; Function Attrs: alwaysinline mustprogress nounwind uwtable
define hidden void @luisa_fallback_wrapper_texture3d_write_float(ptr nocapture noundef readonly %0, ptr nocapture noundef readonly %1, ptr nocapture noundef readonly %2) #6 {
  %4 = load ptr, ptr %0, align 16, !tbaa !17
  %5 = getelementptr inbounds %struct.PackedTextureView, ptr %0, i64 0, i32 1
  %6 = load i64, ptr %5, align 8, !tbaa !21
  %7 = load i32, ptr %1, align 16, !tbaa !31
  %8 = getelementptr inbounds %struct.uint3, ptr %1, i64 0, i32 1
  %9 = load i32, ptr %8, align 4, !tbaa !33
  %10 = getelementptr inbounds %struct.uint3, ptr %1, i64 0, i32 2
  %11 = load i32, ptr %10, align 8, !tbaa !34
  %12 = load <2 x float>, ptr %2, align 16, !tbaa.struct !29
  %13 = getelementptr inbounds i8, ptr %2, i64 8
  %14 = load <2 x float>, ptr %13, align 8, !tbaa.struct !30
  tail call void @luisa_fallback_texture3d_write_float(ptr noundef %4, i64 noundef %6, i32 noundef %7, i32 noundef %9, i32 noundef %11, <2 x float> %12, <2 x float> %14) #12
  ret void
}

; Function Attrs: nounwind
declare void @luisa_fallback_texture3d_write_float(ptr noundef, i64 noundef, i32 noundef, i32 noundef, i32 noundef, <2 x float>, <2 x float>) local_unnamed_addr #5

; Function Attrs: alwaysinline mustprogress nounwind uwtable
define hidden void @luisa_fallback_wrapper_texture3d_write_uint(ptr nocapture noundef readonly %0, ptr nocapture noundef readonly %1, ptr nocapture noundef readonly %2) #4 {
  %4 = load ptr, ptr %0, align 16, !tbaa !17
  %5 = getelementptr inbounds %struct.PackedTextureView, ptr %0, i64 0, i32 1
  %6 = load i64, ptr %5, align 8, !tbaa !21
  %7 = load i32, ptr %1, align 16, !tbaa !31
  %8 = getelementptr inbounds %struct.uint3, ptr %1, i64 0, i32 1
  %9 = load i32, ptr %8, align 4, !tbaa !33
  %10 = getelementptr inbounds %struct.uint3, ptr %1, i64 0, i32 2
  %11 = load i32, ptr %10, align 8, !tbaa !34
  tail call void @luisa_fallback_texture3d_write_uint(ptr noundef %4, i64 noundef %6, i32 noundef %7, i32 noundef %9, i32 noundef %11, ptr noundef nonnull byval(%struct.uint4) align 16 %2) #12
  ret void
}

; Function Attrs: nounwind
declare void @luisa_fallback_texture3d_write_uint(ptr noundef, i64 noundef, i32 noundef, i32 noundef, i32 noundef, ptr noundef byval(%struct.uint4) align 16) local_unnamed_addr #5

; Function Attrs: alwaysinline mustprogress nounwind uwtable
define hidden void @luisa_fallback_wrapper_texture3d_write_int(ptr nocapture noundef readonly %0, ptr nocapture noundef readonly %1, ptr nocapture noundef readonly %2) #4 {
  %4 = load ptr, ptr %0, align 16, !tbaa !17
  %5 = getelementptr inbounds %struct.PackedTextureView, ptr %0, i64 0, i32 1
  %6 = load i64, ptr %5, align 8, !tbaa !21
  %7 = load i32, ptr %1, align 16, !tbaa !31
  %8 = getelementptr inbounds %struct.uint3, ptr %1, i64 0, i32 1
  %9 = load i32, ptr %8, align 4, !tbaa !33
  %10 = getelementptr inbounds %struct.uint3, ptr %1, i64 0, i32 2
  %11 = load i32, ptr %10, align 8, !tbaa !34
  tail call void @luisa_fallback_texture3d_write_int(ptr noundef %4, i64 noundef %6, i32 noundef %7, i32 noundef %9, i32 noundef %11, ptr noundef nonnull byval(%struct.int4) align 16 %2) #12
  ret void
}

; Function Attrs: nounwind
declare void @luisa_fallback_texture3d_write_int(ptr noundef, i64 noundef, i32 noundef, i32 noundef, i32 noundef, ptr noundef byval(%struct.int4) align 16) local_unnamed_addr #5

; Function Attrs: alwaysinline mustprogress nofree norecurse nosync nounwind willreturn memory(argmem: readwrite) uwtable
define hidden void @luisa_fallback_wrapper_texture2d_size(ptr nocapture noundef readonly %0, ptr nocapture noundef writeonly %1) #0 {
  %3 = getelementptr inbounds %struct.TextureView, ptr %0, i64 0, i32 1
  %4 = load i64, ptr %3, align 8
  %5 = trunc i64 %4 to i32
  %6 = and i32 %5, 65535
  %7 = lshr i32 %5, 16
  store i32 %6, ptr %1, align 8, !tbaa.struct !28
  %8 = getelementptr inbounds i8, ptr %1, i64 4
  store i32 %7, ptr %8, align 4, !tbaa.struct !35
  ret void
}

; Function Attrs: alwaysinline mustprogress nofree norecurse nosync nounwind willreturn memory(argmem: readwrite) uwtable
define hidden void @luisa_fallback_wrapper_texture3d_size(ptr nocapture noundef readonly %0, ptr nocapture noundef writeonly %1) #0 {
  %3 = getelementptr inbounds %struct.TextureView, ptr %0, i64 0, i32 1
  %4 = load i64, ptr %3, align 8
  %5 = trunc i64 %4 to i32
  %6 = and i32 %5, 65535
  %7 = lshr i32 %5, 16
  %8 = lshr i64 %4, 32
  %9 = trunc i64 %8 to i32
  %10 = and i32 %9, 65535
  store i32 %6, ptr %1, align 16, !tbaa.struct !36
  %11 = getelementptr inbounds i8, ptr %1, i64 4
  store i32 %7, ptr %11, align 4, !tbaa.struct !28
  %12 = getelementptr inbounds i8, ptr %1, i64 8
  store i32 %10, ptr %12, align 8, !tbaa.struct !35
  ret void
}

; Function Attrs: alwaysinline mustprogress nounwind uwtable
define hidden void @luisa_fallback_wrapper_bindless_texture2d_sample(ptr nocapture noundef readonly %0, i32 noundef %1, ptr nocapture noundef readonly %2, ptr nocapture noundef writeonly %3) #6 {
  %5 = load ptr, ptr %0, align 16, !tbaa !37
  %6 = zext i32 %1 to i64
  %7 = getelementptr inbounds %struct.BindlessSlot, ptr %5, i64 %6, i32 2
  %8 = load ptr, ptr %7, align 16, !tbaa !39
  %9 = getelementptr inbounds %struct.BindlessSlot, ptr %5, i64 %6, i32 1
  %10 = load i64, ptr %9, align 8, !tbaa !41
  %11 = trunc i64 %10 to i32
  %12 = lshr i32 %11, 4
  %13 = and i32 %12, 15
  %14 = load float, ptr %2, align 8, !tbaa !42
  %15 = getelementptr inbounds %struct.float2, ptr %2, i64 0, i32 1
  %16 = load float, ptr %15, align 4, !tbaa !44
  %17 = tail call { <2 x float>, <2 x float> } @luisa_fallback_bindless_texture2d_sample(ptr noundef %8, i32 noundef %13, float noundef nofpclass(nan inf) %14, float noundef nofpclass(nan inf) %16) #12
  %18 = extractvalue { <2 x float>, <2 x float> } %17, 0
  %19 = extractvalue { <2 x float>, <2 x float> } %17, 1
  store <2 x float> %18, ptr %3, align 16, !tbaa.struct !29
  %20 = getelementptr inbounds i8, ptr %3, i64 8
  store <2 x float> %19, ptr %20, align 8, !tbaa.struct !30
  ret void
}

; Function Attrs: nounwind
declare { <2 x float>, <2 x float> } @luisa_fallback_bindless_texture2d_sample(ptr noundef, i32 noundef, float noundef nofpclass(nan inf), float noundef nofpclass(nan inf)) local_unnamed_addr #5

; Function Attrs: alwaysinline mustprogress nounwind uwtable
define hidden void @luisa_fallback_wrapper_bindless_texture2d_sample_level(ptr nocapture noundef readonly %0, i32 noundef %1, ptr nocapture noundef readonly %2, float noundef nofpclass(nan inf) %3, ptr nocapture noundef writeonly %4) #6 {
  %6 = load ptr, ptr %0, align 16, !tbaa !37
  %7 = zext i32 %1 to i64
  %8 = getelementptr inbounds %struct.BindlessSlot, ptr %6, i64 %7, i32 2
  %9 = load ptr, ptr %8, align 16, !tbaa !39
  %10 = getelementptr inbounds %struct.BindlessSlot, ptr %6, i64 %7, i32 1
  %11 = load i64, ptr %10, align 8, !tbaa !41
  %12 = trunc i64 %11 to i32
  %13 = lshr i32 %12, 4
  %14 = and i32 %13, 15
  %15 = load float, ptr %2, align 8, !tbaa !42
  %16 = getelementptr inbounds %struct.float2, ptr %2, i64 0, i32 1
  %17 = load float, ptr %16, align 4, !tbaa !44
  %18 = tail call { <2 x float>, <2 x float> } @luisa_fallback_bindless_texture2d_sample_level(ptr noundef %9, i32 noundef %14, float noundef nofpclass(nan inf) %15, float noundef nofpclass(nan inf) %17, float noundef nofpclass(nan inf) %3) #12
  %19 = extractvalue { <2 x float>, <2 x float> } %18, 0
  %20 = extractvalue { <2 x float>, <2 x float> } %18, 1
  store <2 x float> %19, ptr %4, align 16, !tbaa.struct !29
  %21 = getelementptr inbounds i8, ptr %4, i64 8
  store <2 x float> %20, ptr %21, align 8, !tbaa.struct !30
  ret void
}

; Function Attrs: nounwind
declare { <2 x float>, <2 x float> } @luisa_fallback_bindless_texture2d_sample_level(ptr noundef, i32 noundef, float noundef nofpclass(nan inf), float noundef nofpclass(nan inf), float noundef nofpclass(nan inf)) local_unnamed_addr #5

; Function Attrs: alwaysinline mustprogress nounwind uwtable
define hidden void @luisa_fallback_wrapper_bindless_texture2d_sample_grad(ptr nocapture noundef readonly %0, i32 noundef %1, ptr nocapture noundef readonly %2, ptr nocapture noundef readonly %3, ptr nocapture noundef readonly %4, ptr nocapture noundef writeonly %5) #6 {
  %7 = load ptr, ptr %0, align 16, !tbaa !37
  %8 = zext i32 %1 to i64
  %9 = getelementptr inbounds %struct.BindlessSlot, ptr %7, i64 %8, i32 2
  %10 = load ptr, ptr %9, align 16, !tbaa !39
  %11 = getelementptr inbounds %struct.BindlessSlot, ptr %7, i64 %8, i32 1
  %12 = load i64, ptr %11, align 8, !tbaa !41
  %13 = trunc i64 %12 to i32
  %14 = lshr i32 %13, 4
  %15 = and i32 %14, 15
  %16 = load float, ptr %2, align 8, !tbaa !42
  %17 = getelementptr inbounds %struct.float2, ptr %2, i64 0, i32 1
  %18 = load float, ptr %17, align 4, !tbaa !44
  %19 = load float, ptr %3, align 8, !tbaa !42
  %20 = getelementptr inbounds %struct.float2, ptr %3, i64 0, i32 1
  %21 = load float, ptr %20, align 4, !tbaa !44
  %22 = load float, ptr %4, align 8, !tbaa !42
  %23 = getelementptr inbounds %struct.float2, ptr %4, i64 0, i32 1
  %24 = load float, ptr %23, align 4, !tbaa !44
  %25 = tail call { <2 x float>, <2 x float> } @luisa_fallback_bindless_texture2d_sample_grad(ptr noundef %10, i32 noundef %15, float noundef nofpclass(nan inf) %16, float noundef nofpclass(nan inf) %18, float noundef nofpclass(nan inf) %19, float noundef nofpclass(nan inf) %21, float noundef nofpclass(nan inf) %22, float noundef nofpclass(nan inf) %24) #12
  %26 = extractvalue { <2 x float>, <2 x float> } %25, 0
  %27 = extractvalue { <2 x float>, <2 x float> } %25, 1
  store <2 x float> %26, ptr %5, align 16, !tbaa.struct !29
  %28 = getelementptr inbounds i8, ptr %5, i64 8
  store <2 x float> %27, ptr %28, align 8, !tbaa.struct !30
  ret void
}

; Function Attrs: nounwind
declare { <2 x float>, <2 x float> } @luisa_fallback_bindless_texture2d_sample_grad(ptr noundef, i32 noundef, float noundef nofpclass(nan inf), float noundef nofpclass(nan inf), float noundef nofpclass(nan inf), float noundef nofpclass(nan inf), float noundef nofpclass(nan inf), float noundef nofpclass(nan inf)) local_unnamed_addr #5

; Function Attrs: alwaysinline mustprogress nounwind uwtable
define hidden void @luisa_fallback_wrapper_bindless_texture2d_sample_grad_level(ptr nocapture noundef readonly %0, i32 noundef %1, ptr nocapture noundef readonly %2, ptr nocapture noundef readonly %3, ptr nocapture noundef readonly %4, float noundef nofpclass(nan inf) %5, ptr nocapture noundef writeonly %6) #6 {
  %8 = load ptr, ptr %0, align 16, !tbaa !37
  %9 = zext i32 %1 to i64
  %10 = getelementptr inbounds %struct.BindlessSlot, ptr %8, i64 %9, i32 2
  %11 = load ptr, ptr %10, align 16, !tbaa !39
  %12 = getelementptr inbounds %struct.BindlessSlot, ptr %8, i64 %9, i32 1
  %13 = load i64, ptr %12, align 8, !tbaa !41
  %14 = trunc i64 %13 to i32
  %15 = lshr i32 %14, 4
  %16 = and i32 %15, 15
  %17 = load float, ptr %2, align 8, !tbaa !42
  %18 = getelementptr inbounds %struct.float2, ptr %2, i64 0, i32 1
  %19 = load float, ptr %18, align 4, !tbaa !44
  %20 = load float, ptr %3, align 8, !tbaa !42
  %21 = getelementptr inbounds %struct.float2, ptr %3, i64 0, i32 1
  %22 = load float, ptr %21, align 4, !tbaa !44
  %23 = load float, ptr %4, align 8, !tbaa !42
  %24 = getelementptr inbounds %struct.float2, ptr %4, i64 0, i32 1
  %25 = load float, ptr %24, align 4, !tbaa !44
  %26 = tail call { <2 x float>, <2 x float> } @luisa_fallback_bindless_texture2d_sample_grad_level(ptr noundef %11, i32 noundef %16, float noundef nofpclass(nan inf) %17, float noundef nofpclass(nan inf) %19, float noundef nofpclass(nan inf) %20, float noundef nofpclass(nan inf) %22, float noundef nofpclass(nan inf) %23, float noundef nofpclass(nan inf) %25, float noundef nofpclass(nan inf) %5) #12
  %27 = extractvalue { <2 x float>, <2 x float> } %26, 0
  %28 = extractvalue { <2 x float>, <2 x float> } %26, 1
  store <2 x float> %27, ptr %6, align 16, !tbaa.struct !29
  %29 = getelementptr inbounds i8, ptr %6, i64 8
  store <2 x float> %28, ptr %29, align 8, !tbaa.struct !30
  ret void
}

; Function Attrs: nounwind
declare { <2 x float>, <2 x float> } @luisa_fallback_bindless_texture2d_sample_grad_level(ptr noundef, i32 noundef, float noundef nofpclass(nan inf), float noundef nofpclass(nan inf), float noundef nofpclass(nan inf), float noundef nofpclass(nan inf), float noundef nofpclass(nan inf), float noundef nofpclass(nan inf), float noundef nofpclass(nan inf)) local_unnamed_addr #5

; Function Attrs: alwaysinline mustprogress nounwind uwtable
define hidden void @luisa_fallback_wrapper_bindless_texture3d_sample(ptr nocapture noundef readonly %0, i32 noundef %1, ptr nocapture noundef readonly %2, ptr nocapture noundef writeonly %3) #6 {
  %5 = load ptr, ptr %0, align 16, !tbaa !37
  %6 = zext i32 %1 to i64
  %7 = getelementptr inbounds %struct.BindlessSlot, ptr %5, i64 %6, i32 3
  %8 = load ptr, ptr %7, align 8, !tbaa !45
  %9 = getelementptr inbounds %struct.BindlessSlot, ptr %5, i64 %6, i32 1
  %10 = load i64, ptr %9, align 8, !tbaa !41
  %11 = trunc i64 %10 to i32
  %12 = and i32 %11, 15
  %13 = load float, ptr %2, align 16, !tbaa !46
  %14 = getelementptr inbounds %struct.float3, ptr %2, i64 0, i32 1
  %15 = load float, ptr %14, align 4, !tbaa !47
  %16 = getelementptr inbounds %struct.float3, ptr %2, i64 0, i32 2
  %17 = load float, ptr %16, align 8, !tbaa !15
  %18 = tail call { <2 x float>, <2 x float> } @luisa_fallback_bindless_texture3d_sample(ptr noundef %8, i32 noundef %12, float noundef nofpclass(nan inf) %13, float noundef nofpclass(nan inf) %15, float noundef nofpclass(nan inf) %17) #12
  %19 = extractvalue { <2 x float>, <2 x float> } %18, 0
  %20 = extractvalue { <2 x float>, <2 x float> } %18, 1
  store <2 x float> %19, ptr %3, align 16, !tbaa.struct !29
  %21 = getelementptr inbounds i8, ptr %3, i64 8
  store <2 x float> %20, ptr %21, align 8, !tbaa.struct !30
  ret void
}

; Function Attrs: nounwind
declare { <2 x float>, <2 x float> } @luisa_fallback_bindless_texture3d_sample(ptr noundef, i32 noundef, float noundef nofpclass(nan inf), float noundef nofpclass(nan inf), float noundef nofpclass(nan inf)) local_unnamed_addr #5

; Function Attrs: alwaysinline mustprogress nounwind uwtable
define hidden void @luisa_fallback_wrapper_bindless_texture3d_sample_level(ptr nocapture noundef readonly %0, i32 noundef %1, ptr nocapture noundef readonly %2, float noundef nofpclass(nan inf) %3, ptr nocapture noundef writeonly %4) #6 {
  %6 = load ptr, ptr %0, align 16, !tbaa !37
  %7 = zext i32 %1 to i64
  %8 = getelementptr inbounds %struct.BindlessSlot, ptr %6, i64 %7, i32 3
  %9 = load ptr, ptr %8, align 8, !tbaa !45
  %10 = getelementptr inbounds %struct.BindlessSlot, ptr %6, i64 %7, i32 1
  %11 = load i64, ptr %10, align 8, !tbaa !41
  %12 = trunc i64 %11 to i32
  %13 = and i32 %12, 15
  %14 = load float, ptr %2, align 16, !tbaa !46
  %15 = getelementptr inbounds %struct.float3, ptr %2, i64 0, i32 1
  %16 = load float, ptr %15, align 4, !tbaa !47
  %17 = getelementptr inbounds %struct.float3, ptr %2, i64 0, i32 2
  %18 = load float, ptr %17, align 8, !tbaa !15
  %19 = tail call { <2 x float>, <2 x float> } @luisa_fallback_bindless_texture3d_sample_level(ptr noundef %9, i32 noundef %13, float noundef nofpclass(nan inf) %14, float noundef nofpclass(nan inf) %16, float noundef nofpclass(nan inf) %18, float noundef nofpclass(nan inf) %3) #12
  %20 = extractvalue { <2 x float>, <2 x float> } %19, 0
  %21 = extractvalue { <2 x float>, <2 x float> } %19, 1
  store <2 x float> %20, ptr %4, align 16, !tbaa.struct !29
  %22 = getelementptr inbounds i8, ptr %4, i64 8
  store <2 x float> %21, ptr %22, align 8, !tbaa.struct !30
  ret void
}

; Function Attrs: nounwind
declare { <2 x float>, <2 x float> } @luisa_fallback_bindless_texture3d_sample_level(ptr noundef, i32 noundef, float noundef nofpclass(nan inf), float noundef nofpclass(nan inf), float noundef nofpclass(nan inf), float noundef nofpclass(nan inf)) local_unnamed_addr #5

; Function Attrs: alwaysinline mustprogress nounwind uwtable
define hidden void @luisa_fallback_wrapper_bindless_texture3d_sample_grad(ptr nocapture noundef readonly %0, i32 noundef %1, ptr nocapture noundef readonly %2, ptr nocapture noundef readonly %3, ptr nocapture noundef readonly %4, ptr nocapture noundef writeonly %5) #6 {
  %7 = load ptr, ptr %0, align 16, !tbaa !37
  %8 = zext i32 %1 to i64
  %9 = getelementptr inbounds %struct.BindlessSlot, ptr %7, i64 %8, i32 3
  %10 = load ptr, ptr %9, align 8, !tbaa !45
  %11 = getelementptr inbounds %struct.BindlessSlot, ptr %7, i64 %8, i32 1
  %12 = load i64, ptr %11, align 8, !tbaa !41
  %13 = trunc i64 %12 to i32
  %14 = and i32 %13, 15
  %15 = load float, ptr %2, align 16, !tbaa !46
  %16 = getelementptr inbounds %struct.float3, ptr %2, i64 0, i32 1
  %17 = load float, ptr %16, align 4, !tbaa !47
  %18 = getelementptr inbounds %struct.float3, ptr %2, i64 0, i32 2
  %19 = load float, ptr %18, align 8, !tbaa !15
  %20 = load float, ptr %3, align 16, !tbaa !46
  %21 = getelementptr inbounds %struct.float3, ptr %3, i64 0, i32 1
  %22 = load float, ptr %21, align 4, !tbaa !47
  %23 = getelementptr inbounds %struct.float3, ptr %3, i64 0, i32 2
  %24 = load float, ptr %23, align 8, !tbaa !15
  %25 = load float, ptr %4, align 16, !tbaa !46
  %26 = getelementptr inbounds %struct.float3, ptr %4, i64 0, i32 1
  %27 = load float, ptr %26, align 4, !tbaa !47
  %28 = getelementptr inbounds %struct.float3, ptr %4, i64 0, i32 2
  %29 = load float, ptr %28, align 8, !tbaa !15
  %30 = tail call { <2 x float>, <2 x float> } @luisa_fallback_bindless_texture3d_sample_grad(ptr noundef %10, i32 noundef %14, float noundef nofpclass(nan inf) %15, float noundef nofpclass(nan inf) %17, float noundef nofpclass(nan inf) %19, float noundef nofpclass(nan inf) %20, float noundef nofpclass(nan inf) %22, float noundef nofpclass(nan inf) %24, float noundef nofpclass(nan inf) %25, float noundef nofpclass(nan inf) %27, float noundef nofpclass(nan inf) %29) #12
  %31 = extractvalue { <2 x float>, <2 x float> } %30, 0
  %32 = extractvalue { <2 x float>, <2 x float> } %30, 1
  store <2 x float> %31, ptr %5, align 16, !tbaa.struct !29
  %33 = getelementptr inbounds i8, ptr %5, i64 8
  store <2 x float> %32, ptr %33, align 8, !tbaa.struct !30
  ret void
}

; Function Attrs: nounwind
declare { <2 x float>, <2 x float> } @luisa_fallback_bindless_texture3d_sample_grad(ptr noundef, i32 noundef, float noundef nofpclass(nan inf), float noundef nofpclass(nan inf), float noundef nofpclass(nan inf), float noundef nofpclass(nan inf), float noundef nofpclass(nan inf), float noundef nofpclass(nan inf), float noundef nofpclass(nan inf), float noundef nofpclass(nan inf), float noundef nofpclass(nan inf)) local_unnamed_addr #5

; Function Attrs: alwaysinline mustprogress nounwind uwtable
define hidden void @luisa_fallback_wrapper_bindless_texture3d_sample_grad_level(ptr nocapture noundef readonly %0, i32 noundef %1, ptr nocapture noundef readonly %2, ptr nocapture noundef readonly %3, ptr nocapture noundef readonly %4, float noundef nofpclass(nan inf) %5, ptr nocapture noundef writeonly %6) #6 {
  %8 = load ptr, ptr %0, align 16, !tbaa !37
  %9 = zext i32 %1 to i64
  %10 = getelementptr inbounds %struct.BindlessSlot, ptr %8, i64 %9, i32 3
  %11 = load ptr, ptr %10, align 8, !tbaa !45
  %12 = getelementptr inbounds %struct.BindlessSlot, ptr %8, i64 %9, i32 1
  %13 = load i64, ptr %12, align 8, !tbaa !41
  %14 = trunc i64 %13 to i32
  %15 = and i32 %14, 15
  %16 = load float, ptr %2, align 16, !tbaa !46
  %17 = getelementptr inbounds %struct.float3, ptr %2, i64 0, i32 1
  %18 = load float, ptr %17, align 4, !tbaa !47
  %19 = getelementptr inbounds %struct.float3, ptr %2, i64 0, i32 2
  %20 = load float, ptr %19, align 8, !tbaa !15
  %21 = load float, ptr %3, align 16, !tbaa !46
  %22 = getelementptr inbounds %struct.float3, ptr %3, i64 0, i32 1
  %23 = load float, ptr %22, align 4, !tbaa !47
  %24 = getelementptr inbounds %struct.float3, ptr %3, i64 0, i32 2
  %25 = load float, ptr %24, align 8, !tbaa !15
  %26 = load float, ptr %4, align 16, !tbaa !46
  %27 = getelementptr inbounds %struct.float3, ptr %4, i64 0, i32 1
  %28 = load float, ptr %27, align 4, !tbaa !47
  %29 = getelementptr inbounds %struct.float3, ptr %4, i64 0, i32 2
  %30 = load float, ptr %29, align 8, !tbaa !15
  %31 = tail call { <2 x float>, <2 x float> } @luisa_fallback_bindless_texture3d_sample_grad_level(ptr noundef %11, i32 noundef %15, float noundef nofpclass(nan inf) %16, float noundef nofpclass(nan inf) %18, float noundef nofpclass(nan inf) %20, float noundef nofpclass(nan inf) %21, float noundef nofpclass(nan inf) %23, float noundef nofpclass(nan inf) %25, float noundef nofpclass(nan inf) %26, float noundef nofpclass(nan inf) %28, float noundef nofpclass(nan inf) %30, float noundef nofpclass(nan inf) %5) #12
  %32 = extractvalue { <2 x float>, <2 x float> } %31, 0
  %33 = extractvalue { <2 x float>, <2 x float> } %31, 1
  store <2 x float> %32, ptr %6, align 16, !tbaa.struct !29
  %34 = getelementptr inbounds i8, ptr %6, i64 8
  store <2 x float> %33, ptr %34, align 8, !tbaa.struct !30
  ret void
}

; Function Attrs: nounwind
declare { <2 x float>, <2 x float> } @luisa_fallback_bindless_texture3d_sample_grad_level(ptr noundef, i32 noundef, float noundef nofpclass(nan inf), float noundef nofpclass(nan inf), float noundef nofpclass(nan inf), float noundef nofpclass(nan inf), float noundef nofpclass(nan inf), float noundef nofpclass(nan inf), float noundef nofpclass(nan inf), float noundef nofpclass(nan inf), float noundef nofpclass(nan inf), float noundef nofpclass(nan inf)) local_unnamed_addr #5

; Function Attrs: alwaysinline mustprogress nounwind uwtable
define hidden void @luisa_fallback_wrapper_bindless_texture2d_read(ptr nocapture noundef readonly %0, i32 noundef %1, ptr nocapture noundef readonly %2, ptr nocapture noundef writeonly %3) #6 {
  %5 = load ptr, ptr %0, align 16, !tbaa !37
  %6 = zext i32 %1 to i64
  %7 = getelementptr inbounds %struct.BindlessSlot, ptr %5, i64 %6, i32 2
  %8 = load ptr, ptr %7, align 16, !tbaa !39
  %9 = load i32, ptr %2, align 8, !tbaa !22
  %10 = getelementptr inbounds %struct.uint2, ptr %2, i64 0, i32 1
  %11 = load i32, ptr %10, align 4, !tbaa !25
  %12 = tail call { <2 x float>, <2 x float> } @luisa_fallback_bindless_texture2d_read(ptr noundef %8, i32 noundef %9, i32 noundef %11) #12
  %13 = extractvalue { <2 x float>, <2 x float> } %12, 0
  %14 = extractvalue { <2 x float>, <2 x float> } %12, 1
  store <2 x float> %13, ptr %3, align 16, !tbaa.struct !29
  %15 = getelementptr inbounds i8, ptr %3, i64 8
  store <2 x float> %14, ptr %15, align 8, !tbaa.struct !30
  ret void
}

; Function Attrs: nounwind
declare { <2 x float>, <2 x float> } @luisa_fallback_bindless_texture2d_read(ptr noundef, i32 noundef, i32 noundef) local_unnamed_addr #5

; Function Attrs: alwaysinline mustprogress nounwind uwtable
define hidden void @luisa_fallback_wrapper_bindless_texture3d_read(ptr nocapture noundef readonly %0, i32 noundef %1, ptr nocapture noundef readonly %2, ptr nocapture noundef writeonly %3) #6 {
  %5 = load ptr, ptr %0, align 16, !tbaa !37
  %6 = zext i32 %1 to i64
  %7 = getelementptr inbounds %struct.BindlessSlot, ptr %5, i64 %6, i32 3
  %8 = load ptr, ptr %7, align 8, !tbaa !45
  %9 = load i32, ptr %2, align 16, !tbaa !31
  %10 = getelementptr inbounds %struct.uint3, ptr %2, i64 0, i32 1
  %11 = load i32, ptr %10, align 4, !tbaa !33
  %12 = getelementptr inbounds %struct.uint3, ptr %2, i64 0, i32 2
  %13 = load i32, ptr %12, align 8, !tbaa !34
  %14 = tail call { <2 x float>, <2 x float> } @luisa_fallback_bindless_texture3d_read(ptr noundef %8, i32 noundef %9, i32 noundef %11, i32 noundef %13) #12
  %15 = extractvalue { <2 x float>, <2 x float> } %14, 0
  %16 = extractvalue { <2 x float>, <2 x float> } %14, 1
  store <2 x float> %15, ptr %3, align 16, !tbaa.struct !29
  %17 = getelementptr inbounds i8, ptr %3, i64 8
  store <2 x float> %16, ptr %17, align 8, !tbaa.struct !30
  ret void
}

; Function Attrs: nounwind
declare { <2 x float>, <2 x float> } @luisa_fallback_bindless_texture3d_read(ptr noundef, i32 noundef, i32 noundef, i32 noundef) local_unnamed_addr #5

; Function Attrs: alwaysinline mustprogress nounwind uwtable
define hidden void @luisa_fallback_wrapper_bindless_texture2d_read_level(ptr nocapture noundef readonly %0, i32 noundef %1, ptr nocapture noundef readonly %2, i32 noundef %3, ptr nocapture noundef writeonly %4) #6 {
  %6 = load ptr, ptr %0, align 16, !tbaa !37
  %7 = zext i32 %1 to i64
  %8 = getelementptr inbounds %struct.BindlessSlot, ptr %6, i64 %7, i32 2
  %9 = load ptr, ptr %8, align 16, !tbaa !39
  %10 = load i32, ptr %2, align 8, !tbaa !22
  %11 = getelementptr inbounds %struct.uint2, ptr %2, i64 0, i32 1
  %12 = load i32, ptr %11, align 4, !tbaa !25
  %13 = tail call { <2 x float>, <2 x float> } @luisa_fallback_bindless_texture2d_read_level(ptr noundef %9, i32 noundef %10, i32 noundef %12, i32 noundef %3) #12
  %14 = extractvalue { <2 x float>, <2 x float> } %13, 0
  %15 = extractvalue { <2 x float>, <2 x float> } %13, 1
  store <2 x float> %14, ptr %4, align 16, !tbaa.struct !29
  %16 = getelementptr inbounds i8, ptr %4, i64 8
  store <2 x float> %15, ptr %16, align 8, !tbaa.struct !30
  ret void
}

; Function Attrs: nounwind
declare { <2 x float>, <2 x float> } @luisa_fallback_bindless_texture2d_read_level(ptr noundef, i32 noundef, i32 noundef, i32 noundef) local_unnamed_addr #5

; Function Attrs: alwaysinline mustprogress nounwind uwtable
define hidden void @luisa_fallback_wrapper_bindless_texture3d_read_level(ptr nocapture noundef readonly %0, i32 noundef %1, ptr nocapture noundef readonly %2, i32 noundef %3, ptr nocapture noundef writeonly %4) #6 {
  %6 = load ptr, ptr %0, align 16, !tbaa !37
  %7 = zext i32 %1 to i64
  %8 = getelementptr inbounds %struct.BindlessSlot, ptr %6, i64 %7, i32 3
  %9 = load ptr, ptr %8, align 8, !tbaa !45
  %10 = load i32, ptr %2, align 16, !tbaa !31
  %11 = getelementptr inbounds %struct.uint3, ptr %2, i64 0, i32 1
  %12 = load i32, ptr %11, align 4, !tbaa !33
  %13 = getelementptr inbounds %struct.uint3, ptr %2, i64 0, i32 2
  %14 = load i32, ptr %13, align 8, !tbaa !34
  %15 = tail call { <2 x float>, <2 x float> } @luisa_fallback_bindless_texture3d_read_level(ptr noundef %9, i32 noundef %10, i32 noundef %12, i32 noundef %14, i32 noundef %3) #12
  %16 = extractvalue { <2 x float>, <2 x float> } %15, 0
  %17 = extractvalue { <2 x float>, <2 x float> } %15, 1
  store <2 x float> %16, ptr %4, align 16, !tbaa.struct !29
  %18 = getelementptr inbounds i8, ptr %4, i64 8
  store <2 x float> %17, ptr %18, align 8, !tbaa.struct !30
  ret void
}

; Function Attrs: nounwind
declare { <2 x float>, <2 x float> } @luisa_fallback_bindless_texture3d_read_level(ptr noundef, i32 noundef, i32 noundef, i32 noundef, i32 noundef) local_unnamed_addr #5

; Function Attrs: alwaysinline mustprogress nofree norecurse nosync nounwind willreturn memory(read, argmem: readwrite, inaccessiblemem: none) uwtable
define hidden void @luisa_fallback_wrapper_bindless_texture2d_size_level(ptr nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, ptr nocapture noundef writeonly %3) #7 {
  %5 = load ptr, ptr %0, align 16, !tbaa !37
  %6 = zext i32 %1 to i64
  %7 = getelementptr inbounds %struct.BindlessSlot, ptr %5, i64 %6, i32 2
  %8 = load ptr, ptr %7, align 16, !tbaa !39
  %9 = getelementptr inbounds %struct.TextureHeader, ptr %8, i64 0, i32 1
  %10 = load i16, ptr %9, align 8, !tbaa !48
  %11 = zext i16 %10 to i32
  %12 = lshr i32 %11, %2
  %13 = getelementptr inbounds %struct.TextureHeader, ptr %8, i64 0, i32 1, i64 1
  %14 = load i16, ptr %13, align 2, !tbaa !48
  %15 = zext i16 %14 to i32
  %16 = lshr i32 %15, %2
  %17 = tail call i32 @llvm.umax.i32(i32 %12, i32 1)
  %18 = tail call i32 @llvm.umax.i32(i32 %16, i32 1)
  store i32 %17, ptr %3, align 8, !tbaa.struct !28
  %19 = getelementptr inbounds i8, ptr %3, i64 4
  store i32 %18, ptr %19, align 4, !tbaa.struct !35
  ret void
}

; Function Attrs: alwaysinline mustprogress nofree norecurse nosync nounwind willreturn memory(read, argmem: readwrite, inaccessiblemem: none) uwtable
define hidden void @luisa_fallback_wrapper_bindless_texture3d_size_level(ptr nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, ptr nocapture noundef writeonly %3) #7 {
  %5 = load ptr, ptr %0, align 16, !tbaa !37
  %6 = zext i32 %1 to i64
  %7 = getelementptr inbounds %struct.BindlessSlot, ptr %5, i64 %6, i32 3
  %8 = load ptr, ptr %7, align 8, !tbaa !45
  %9 = getelementptr inbounds %struct.TextureHeader, ptr %8, i64 0, i32 1
  %10 = load i16, ptr %9, align 8, !tbaa !48
  %11 = zext i16 %10 to i32
  %12 = lshr i32 %11, %2
  %13 = getelementptr inbounds %struct.TextureHeader, ptr %8, i64 0, i32 1, i64 1
  %14 = load i16, ptr %13, align 2, !tbaa !48
  %15 = zext i16 %14 to i32
  %16 = lshr i32 %15, %2
  %17 = getelementptr inbounds %struct.TextureHeader, ptr %8, i64 0, i32 1, i64 2
  %18 = load i16, ptr %17, align 4, !tbaa !48
  %19 = zext i16 %18 to i32
  %20 = lshr i32 %19, %2
  %21 = tail call i32 @llvm.umax.i32(i32 %12, i32 1)
  %22 = tail call i32 @llvm.umax.i32(i32 %16, i32 1)
  %23 = tail call i32 @llvm.umax.i32(i32 %20, i32 1)
  store i32 %21, ptr %3, align 16, !tbaa.struct !36
  %24 = getelementptr inbounds i8, ptr %3, i64 4
  store i32 %22, ptr %24, align 4, !tbaa.struct !28
  %25 = getelementptr inbounds i8, ptr %3, i64 8
  store i32 %23, ptr %25, align 8, !tbaa.struct !35
  ret void
}

; Function Attrs: alwaysinline mustprogress nofree norecurse nosync nounwind willreturn memory(read, argmem: readwrite, inaccessiblemem: none) uwtable
define hidden void @luisa_fallback_wrapper_bindless_texture2d_size(ptr nocapture noundef readonly %0, i32 noundef %1, ptr nocapture noundef writeonly %2) #7 {
  %4 = load ptr, ptr %0, align 16, !tbaa !37
  %5 = zext i32 %1 to i64
  %6 = getelementptr inbounds %struct.BindlessSlot, ptr %4, i64 %5, i32 2
  %7 = load ptr, ptr %6, align 16, !tbaa !39
  %8 = getelementptr inbounds %struct.TextureHeader, ptr %7, i64 0, i32 1
  %9 = load <2 x i16>, ptr %8, align 8, !tbaa !48
  %10 = tail call <2 x i16> @llvm.umax.v2i16(<2 x i16> %9, <2 x i16> <i16 1, i16 1>)
  %11 = zext <2 x i16> %10 to <2 x i32>
  store <2 x i32> %11, ptr %2, align 8
  ret void
}

; Function Attrs: alwaysinline mustprogress nofree norecurse nosync nounwind willreturn memory(read, argmem: readwrite, inaccessiblemem: none) uwtable
define hidden void @luisa_fallback_wrapper_bindless_texture3d_size(ptr nocapture noundef readonly %0, i32 noundef %1, ptr nocapture noundef writeonly %2) #7 {
  %4 = load ptr, ptr %0, align 16, !tbaa !37
  %5 = zext i32 %1 to i64
  %6 = getelementptr inbounds %struct.BindlessSlot, ptr %4, i64 %5, i32 3
  %7 = load ptr, ptr %6, align 8, !tbaa !45
  %8 = getelementptr inbounds %struct.TextureHeader, ptr %7, i64 0, i32 1
  %9 = getelementptr inbounds %struct.TextureHeader, ptr %7, i64 0, i32 1, i64 2
  %10 = load i16, ptr %9, align 4, !tbaa !48
  %11 = tail call i16 @llvm.umax.i16(i16 %10, i16 1)
  %12 = zext i16 %11 to i32
  %13 = load <2 x i16>, ptr %8, align 8, !tbaa !48
  %14 = tail call <2 x i16> @llvm.umax.v2i16(<2 x i16> %13, <2 x i16> <i16 1, i16 1>)
  %15 = zext <2 x i16> %14 to <2 x i32>
  store <2 x i32> %15, ptr %2, align 16
  %16 = getelementptr inbounds i8, ptr %2, i64 8
  store i32 %12, ptr %16, align 8, !tbaa.struct !35
  ret void
}

; Function Attrs: alwaysinline mustprogress nounwind uwtable
define hidden void @luisa_fallback_wrapper_accel_trace_closest_motion(ptr nocapture noundef readonly %0, ptr nocapture noundef readonly %1, float noundef nofpclass(nan inf) %2, i32 noundef %3, ptr nocapture noundef writeonly %4) #4 {
  %6 = alloca %struct.SurfaceHit, align 8
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %6) #12
  %7 = load ptr, ptr %0, align 16, !tbaa !50
  %8 = load float, ptr %1, align 16, !tbaa !13
  %9 = getelementptr inbounds [3 x float], ptr %1, i64 0, i64 1
  %10 = load float, ptr %9, align 4, !tbaa !13
  %11 = getelementptr inbounds [3 x float], ptr %1, i64 0, i64 2
  %12 = load float, ptr %11, align 8, !tbaa !13
  %13 = getelementptr inbounds %struct.Ray, ptr %1, i64 0, i32 1
  %14 = load float, ptr %13, align 4, !tbaa !52
  %15 = getelementptr inbounds %struct.Ray, ptr %1, i64 0, i32 2
  %16 = load float, ptr %15, align 16, !tbaa !13
  %17 = getelementptr inbounds %struct.Ray, ptr %1, i64 0, i32 2, i64 1
  %18 = load float, ptr %17, align 4, !tbaa !13
  %19 = getelementptr inbounds %struct.Ray, ptr %1, i64 0, i32 2, i64 2
  %20 = load float, ptr %19, align 8, !tbaa !13
  %21 = getelementptr inbounds %struct.Ray, ptr %1, i64 0, i32 3
  %22 = load float, ptr %21, align 4, !tbaa !54
  call void @luisa_fallback_accel_trace_closest(ptr dead_on_unwind nonnull writable sret(%struct.SurfaceHit) align 8 %6, ptr noundef %7, float noundef nofpclass(nan inf) %8, float noundef nofpclass(nan inf) %10, float noundef nofpclass(nan inf) %12, float noundef nofpclass(nan inf) %14, float noundef nofpclass(nan inf) %16, float noundef nofpclass(nan inf) %18, float noundef nofpclass(nan inf) %20, float noundef nofpclass(nan inf) %22, i32 noundef %3, float noundef nofpclass(nan inf) %2) #12
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %4, ptr noundef nonnull align 8 dereferenceable(24) %6, i64 24, i1 false), !tbaa.struct !55
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %6) #12
  ret void
}

; Function Attrs: nounwind
declare void @luisa_fallback_accel_trace_closest(ptr dead_on_unwind writable sret(%struct.SurfaceHit) align 8, ptr noundef, float noundef nofpclass(nan inf), float noundef nofpclass(nan inf), float noundef nofpclass(nan inf), float noundef nofpclass(nan inf), float noundef nofpclass(nan inf), float noundef nofpclass(nan inf), float noundef nofpclass(nan inf), float noundef nofpclass(nan inf), i32 noundef, float noundef nofpclass(nan inf)) local_unnamed_addr #5

; Function Attrs: alwaysinline mustprogress nounwind uwtable
define hidden void @luisa_fallback_wrapper_accel_trace_any_motion(ptr nocapture noundef readonly %0, ptr nocapture noundef readonly %1, float noundef nofpclass(nan inf) %2, i32 noundef %3, ptr nocapture noundef writeonly %4) #4 {
  %6 = load ptr, ptr %0, align 16, !tbaa !50
  %7 = load float, ptr %1, align 16, !tbaa !13
  %8 = getelementptr inbounds [3 x float], ptr %1, i64 0, i64 1
  %9 = load float, ptr %8, align 4, !tbaa !13
  %10 = getelementptr inbounds [3 x float], ptr %1, i64 0, i64 2
  %11 = load float, ptr %10, align 8, !tbaa !13
  %12 = getelementptr inbounds %struct.Ray, ptr %1, i64 0, i32 1
  %13 = load float, ptr %12, align 4, !tbaa !52
  %14 = getelementptr inbounds %struct.Ray, ptr %1, i64 0, i32 2
  %15 = load float, ptr %14, align 16, !tbaa !13
  %16 = getelementptr inbounds %struct.Ray, ptr %1, i64 0, i32 2, i64 1
  %17 = load float, ptr %16, align 4, !tbaa !13
  %18 = getelementptr inbounds %struct.Ray, ptr %1, i64 0, i32 2, i64 2
  %19 = load float, ptr %18, align 8, !tbaa !13
  %20 = getelementptr inbounds %struct.Ray, ptr %1, i64 0, i32 3
  %21 = load float, ptr %20, align 4, !tbaa !54
  %22 = tail call zeroext i1 @luisa_fallback_accel_trace_any(ptr noundef %6, float noundef nofpclass(nan inf) %7, float noundef nofpclass(nan inf) %9, float noundef nofpclass(nan inf) %11, float noundef nofpclass(nan inf) %13, float noundef nofpclass(nan inf) %15, float noundef nofpclass(nan inf) %17, float noundef nofpclass(nan inf) %19, float noundef nofpclass(nan inf) %21, i32 noundef %3, float noundef nofpclass(nan inf) %2) #12
  %23 = zext i1 %22 to i8
  store i8 %23, ptr %4, align 1, !tbaa !56
  ret void
}

; Function Attrs: nounwind
declare zeroext i1 @luisa_fallback_accel_trace_any(ptr noundef, float noundef nofpclass(nan inf), float noundef nofpclass(nan inf), float noundef nofpclass(nan inf), float noundef nofpclass(nan inf), float noundef nofpclass(nan inf), float noundef nofpclass(nan inf), float noundef nofpclass(nan inf), float noundef nofpclass(nan inf), i32 noundef, float noundef nofpclass(nan inf)) local_unnamed_addr #5

; Function Attrs: alwaysinline mustprogress nounwind uwtable
define hidden void @luisa_fallback_wrapper_accel_trace_closest(ptr nocapture noundef readonly %0, ptr nocapture noundef readonly %1, i32 noundef %2, ptr nocapture noundef writeonly %3) #4 {
  %5 = alloca %struct.SurfaceHit, align 8
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %5) #12
  %6 = load ptr, ptr %0, align 16, !tbaa !50
  %7 = load float, ptr %1, align 16, !tbaa !13
  %8 = getelementptr inbounds [3 x float], ptr %1, i64 0, i64 1
  %9 = load float, ptr %8, align 4, !tbaa !13
  %10 = getelementptr inbounds [3 x float], ptr %1, i64 0, i64 2
  %11 = load float, ptr %10, align 8, !tbaa !13
  %12 = getelementptr inbounds %struct.Ray, ptr %1, i64 0, i32 1
  %13 = load float, ptr %12, align 4, !tbaa !52
  %14 = getelementptr inbounds %struct.Ray, ptr %1, i64 0, i32 2
  %15 = load float, ptr %14, align 16, !tbaa !13
  %16 = getelementptr inbounds %struct.Ray, ptr %1, i64 0, i32 2, i64 1
  %17 = load float, ptr %16, align 4, !tbaa !13
  %18 = getelementptr inbounds %struct.Ray, ptr %1, i64 0, i32 2, i64 2
  %19 = load float, ptr %18, align 8, !tbaa !13
  %20 = getelementptr inbounds %struct.Ray, ptr %1, i64 0, i32 3
  %21 = load float, ptr %20, align 4, !tbaa !54
  call void @luisa_fallback_accel_trace_closest(ptr dead_on_unwind nonnull writable sret(%struct.SurfaceHit) align 8 %5, ptr noundef %6, float noundef nofpclass(nan inf) %7, float noundef nofpclass(nan inf) %9, float noundef nofpclass(nan inf) %11, float noundef nofpclass(nan inf) %13, float noundef nofpclass(nan inf) %15, float noundef nofpclass(nan inf) %17, float noundef nofpclass(nan inf) %19, float noundef nofpclass(nan inf) %21, i32 noundef %2, float noundef nofpclass(nan inf) 0.000000e+00) #12
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %3, ptr noundef nonnull align 8 dereferenceable(24) %5, i64 24, i1 false), !tbaa.struct !55
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %5) #12
  ret void
}

; Function Attrs: alwaysinline mustprogress nounwind uwtable
define hidden void @luisa_fallback_wrapper_accel_trace_any(ptr nocapture noundef readonly %0, ptr nocapture noundef readonly %1, i32 noundef %2, ptr nocapture noundef writeonly %3) #4 {
  %5 = load ptr, ptr %0, align 16, !tbaa !50
  %6 = load float, ptr %1, align 16, !tbaa !13
  %7 = getelementptr inbounds [3 x float], ptr %1, i64 0, i64 1
  %8 = load float, ptr %7, align 4, !tbaa !13
  %9 = getelementptr inbounds [3 x float], ptr %1, i64 0, i64 2
  %10 = load float, ptr %9, align 8, !tbaa !13
  %11 = getelementptr inbounds %struct.Ray, ptr %1, i64 0, i32 1
  %12 = load float, ptr %11, align 4, !tbaa !52
  %13 = getelementptr inbounds %struct.Ray, ptr %1, i64 0, i32 2
  %14 = load float, ptr %13, align 16, !tbaa !13
  %15 = getelementptr inbounds %struct.Ray, ptr %1, i64 0, i32 2, i64 1
  %16 = load float, ptr %15, align 4, !tbaa !13
  %17 = getelementptr inbounds %struct.Ray, ptr %1, i64 0, i32 2, i64 2
  %18 = load float, ptr %17, align 8, !tbaa !13
  %19 = getelementptr inbounds %struct.Ray, ptr %1, i64 0, i32 3
  %20 = load float, ptr %19, align 4, !tbaa !54
  %21 = tail call zeroext i1 @luisa_fallback_accel_trace_any(ptr noundef %5, float noundef nofpclass(nan inf) %6, float noundef nofpclass(nan inf) %8, float noundef nofpclass(nan inf) %10, float noundef nofpclass(nan inf) %12, float noundef nofpclass(nan inf) %14, float noundef nofpclass(nan inf) %16, float noundef nofpclass(nan inf) %18, float noundef nofpclass(nan inf) %20, i32 noundef %2, float noundef nofpclass(nan inf) 0.000000e+00) #12
  %22 = zext i1 %21 to i8
  store i8 %22, ptr %3, align 1, !tbaa !56
  ret void
}

; Function Attrs: alwaysinline mustprogress nofree norecurse nosync nounwind willreturn memory(read, argmem: readwrite, inaccessiblemem: none) uwtable
define hidden void @luisa_fallback_wrapper_accel_instance_transform(ptr nocapture noundef readonly %0, i32 noundef %1, ptr nocapture noundef writeonly %2) #7 {
  %4 = getelementptr inbounds %struct.AccelView, ptr %0, i64 0, i32 1
  %5 = load ptr, ptr %4, align 8, !tbaa !58
  %6 = zext i32 %1 to i64
  %7 = getelementptr inbounds %struct.AccelInstance, ptr %5, i64 %6
  %8 = load <4 x float>, ptr %7, align 16, !tbaa !6
  %9 = getelementptr inbounds <4 x float>, ptr %7, i64 1
  %10 = load <4 x float>, ptr %9, align 16, !tbaa !6
  %11 = getelementptr inbounds <4 x float>, ptr %7, i64 2
  %12 = load <4 x float>, ptr %11, align 16, !tbaa !6
  %13 = insertelement <4 x float> %8, float 0.000000e+00, i64 3
  %14 = shufflevector <4 x float> %13, <4 x float> %10, <4 x i32> <i32 0, i32 4, i32 poison, i32 3>
  %15 = shufflevector <4 x float> %14, <4 x float> %12, <4 x i32> <i32 0, i32 1, i32 4, i32 3>
  store <4 x float> %15, ptr %2, align 16, !tbaa !6
  %16 = shufflevector <4 x float> <float poison, float poison, float poison, float 0.000000e+00>, <4 x float> %8, <4 x i32> <i32 5, i32 poison, i32 poison, i32 3>
  %17 = shufflevector <4 x float> %16, <4 x float> %10, <4 x i32> <i32 0, i32 5, i32 poison, i32 3>
  %18 = shufflevector <4 x float> %17, <4 x float> %12, <4 x i32> <i32 0, i32 1, i32 5, i32 3>
  %19 = getelementptr inbounds [4 x <4 x float>], ptr %2, i64 0, i64 1
  store <4 x float> %18, ptr %19, align 16, !tbaa !6
  %20 = shufflevector <4 x float> <float poison, float poison, float poison, float 0.000000e+00>, <4 x float> %8, <4 x i32> <i32 6, i32 poison, i32 poison, i32 3>
  %21 = shufflevector <4 x float> %20, <4 x float> %10, <4 x i32> <i32 0, i32 6, i32 poison, i32 3>
  %22 = shufflevector <4 x float> %21, <4 x float> %12, <4 x i32> <i32 0, i32 1, i32 6, i32 3>
  %23 = getelementptr inbounds [4 x <4 x float>], ptr %2, i64 0, i64 2
  store <4 x float> %22, ptr %23, align 16, !tbaa !6
  %24 = shufflevector <4 x float> <float poison, float poison, float poison, float 1.000000e+00>, <4 x float> %8, <4 x i32> <i32 7, i32 poison, i32 poison, i32 3>
  %25 = shufflevector <4 x float> %24, <4 x float> %10, <4 x i32> <i32 0, i32 7, i32 poison, i32 3>
  %26 = shufflevector <4 x float> %25, <4 x float> %12, <4 x i32> <i32 0, i32 1, i32 7, i32 3>
  %27 = getelementptr inbounds [4 x <4 x float>], ptr %2, i64 0, i64 3
  store <4 x float> %26, ptr %27, align 16, !tbaa !6
  ret void
}

; Function Attrs: alwaysinline mustprogress nofree norecurse nosync nounwind willreturn memory(read, argmem: readwrite, inaccessiblemem: none) uwtable
define hidden void @luisa_fallback_wrapper_accel_instance_user_id(ptr nocapture noundef readonly %0, i32 noundef %1, ptr nocapture noundef writeonly %2) #7 {
  %4 = getelementptr inbounds %struct.AccelView, ptr %0, i64 0, i32 1
  %5 = load ptr, ptr %4, align 8, !tbaa !58
  %6 = zext i32 %1 to i64
  %7 = getelementptr inbounds %struct.AccelInstance, ptr %5, i64 %6, i32 4
  %8 = load i32, ptr %7, align 4, !tbaa !59
  store i32 %8, ptr %2, align 4, !tbaa !27
  ret void
}

; Function Attrs: alwaysinline mustprogress nofree norecurse nosync nounwind willreturn memory(read, argmem: readwrite, inaccessiblemem: none) uwtable
define hidden void @luisa_fallback_wrapper_accel_instance_visibility_mask(ptr nocapture noundef readonly %0, i32 noundef %1, ptr nocapture noundef writeonly %2) #7 {
  %4 = getelementptr inbounds %struct.AccelView, ptr %0, i64 0, i32 1
  %5 = load ptr, ptr %4, align 8, !tbaa !58
  %6 = zext i32 %1 to i64
  %7 = getelementptr inbounds %struct.AccelInstance, ptr %5, i64 %6, i32 1
  %8 = load i8, ptr %7, align 16, !tbaa !61
  %9 = zext i8 %8 to i32
  store i32 %9, ptr %2, align 4, !tbaa !27
  ret void
}

; Function Attrs: alwaysinline mustprogress nofree norecurse nosync nounwind willreturn memory(write, argmem: readwrite, inaccessiblemem: none) uwtable
define hidden void @luisa_fallback_wrapper_accel_set_instance_transform(ptr nocapture noundef readonly %0, i32 noundef %1, ptr nocapture noundef readonly %2) #8 {
  %4 = getelementptr inbounds %struct.AccelView, ptr %0, i64 0, i32 1
  %5 = load ptr, ptr %4, align 8, !tbaa !58
  %6 = zext i32 %1 to i64
  %7 = getelementptr inbounds %struct.AccelInstance, ptr %5, i64 %6
  %8 = load <4 x float>, ptr %2, align 16, !tbaa.struct !12
  %9 = getelementptr inbounds i8, ptr %2, i64 16
  %10 = load <4 x float>, ptr %9, align 16, !tbaa.struct !10
  %11 = getelementptr inbounds i8, ptr %2, i64 32
  %12 = load <4 x float>, ptr %11, align 16, !tbaa.struct !11
  %13 = getelementptr inbounds i8, ptr %2, i64 48
  %14 = load <4 x float>, ptr %13, align 16, !tbaa.struct !5
  %15 = shufflevector <4 x float> %8, <4 x float> %10, <4 x i32> <i32 0, i32 4, i32 poison, i32 poison>
  %16 = shufflevector <4 x float> %15, <4 x float> %12, <4 x i32> <i32 0, i32 1, i32 4, i32 poison>
  %17 = shufflevector <4 x float> %16, <4 x float> %14, <4 x i32> <i32 0, i32 1, i32 2, i32 4>
  store <4 x float> %17, ptr %7, align 16, !tbaa !6
  %18 = shufflevector <4 x float> %8, <4 x float> %10, <4 x i32> <i32 1, i32 5, i32 poison, i32 poison>
  %19 = shufflevector <4 x float> %18, <4 x float> %12, <4 x i32> <i32 0, i32 1, i32 5, i32 poison>
  %20 = shufflevector <4 x float> %19, <4 x float> %14, <4 x i32> <i32 0, i32 1, i32 2, i32 5>
  %21 = getelementptr inbounds <4 x float>, ptr %7, i64 1
  store <4 x float> %20, ptr %21, align 16, !tbaa !6
  %22 = shufflevector <4 x float> %8, <4 x float> %10, <4 x i32> <i32 2, i32 6, i32 poison, i32 poison>
  %23 = shufflevector <4 x float> %22, <4 x float> %12, <4 x i32> <i32 0, i32 1, i32 6, i32 poison>
  %24 = shufflevector <4 x float> %23, <4 x float> %14, <4 x i32> <i32 0, i32 1, i32 2, i32 6>
  %25 = getelementptr inbounds <4 x float>, ptr %7, i64 2
  store <4 x float> %24, ptr %25, align 16, !tbaa !6
  %26 = getelementptr inbounds %struct.AccelInstance, ptr %5, i64 %6, i32 3
  store i8 1, ptr %26, align 2, !tbaa !62
  ret void
}

; Function Attrs: alwaysinline mustprogress nofree norecurse nosync nounwind willreturn memory(write, argmem: readwrite, inaccessiblemem: none) uwtable
define hidden void @luisa_fallback_wrapper_accel_set_instance_visibility_mask(ptr nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2) #8 {
  %4 = getelementptr inbounds %struct.AccelView, ptr %0, i64 0, i32 1
  %5 = load ptr, ptr %4, align 8, !tbaa !58
  %6 = zext i32 %1 to i64
  %7 = trunc i32 %2 to i8
  %8 = getelementptr inbounds %struct.AccelInstance, ptr %5, i64 %6, i32 1
  store i8 %7, ptr %8, align 16, !tbaa !61
  %9 = getelementptr inbounds %struct.AccelInstance, ptr %5, i64 %6, i32 3
  store i8 1, ptr %9, align 2, !tbaa !62
  ret void
}

; Function Attrs: alwaysinline mustprogress nofree norecurse nosync nounwind willreturn memory(write, argmem: readwrite, inaccessiblemem: none) uwtable
define hidden void @luisa_fallback_wrapper_accel_set_instance_user_id(ptr nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2) #8 {
  %4 = getelementptr inbounds %struct.AccelView, ptr %0, i64 0, i32 1
  %5 = load ptr, ptr %4, align 8, !tbaa !58
  %6 = zext i32 %1 to i64
  %7 = getelementptr inbounds %struct.AccelInstance, ptr %5, i64 %6, i32 4
  store i32 %2, ptr %7, align 4, !tbaa !59
  %8 = getelementptr inbounds %struct.AccelInstance, ptr %5, i64 %6, i32 3
  store i8 1, ptr %8, align 2, !tbaa !62
  ret void
}

; Function Attrs: alwaysinline mustprogress nofree norecurse nosync nounwind willreturn memory(write, argmem: readwrite, inaccessiblemem: none) uwtable
define hidden void @luisa_fallback_wrapper_accel_set_instance_opacity(ptr nocapture noundef readonly %0, i32 noundef %1, i1 noundef zeroext %2) #8 {
  %4 = zext i1 %2 to i8
  %5 = getelementptr inbounds %struct.AccelView, ptr %0, i64 0, i32 1
  %6 = load ptr, ptr %5, align 8, !tbaa !58
  %7 = zext i32 %1 to i64
  %8 = getelementptr inbounds %struct.AccelInstance, ptr %6, i64 %7, i32 2
  store i8 %4, ptr %8, align 1, !tbaa !63
  %9 = getelementptr inbounds %struct.AccelInstance, ptr %6, i64 %7, i32 3
  store i8 1, ptr %9, align 2, !tbaa !62
  ret void
}

; Function Attrs: alwaysinline mustprogress nofree norecurse nounwind willreturn memory(argmem: readwrite) uwtable
define hidden i32 @luisa_fallback_wrapper_atomic_exchange_int(ptr nocapture noundef %0, i32 noundef %1) #9 {
  %3 = atomicrmw xchg ptr %0, i32 %1 monotonic, align 4
  ret i32 %3
}

; Function Attrs: alwaysinline mustprogress nofree norecurse nounwind willreturn memory(argmem: readwrite) uwtable
define hidden i32 @luisa_fallback_wrapper_atomic_exchange_uint(ptr nocapture noundef %0, i32 noundef %1) #9 {
  %3 = atomicrmw xchg ptr %0, i32 %1 monotonic, align 4
  ret i32 %3
}

; Function Attrs: alwaysinline mustprogress nofree norecurse nounwind willreturn memory(argmem: readwrite) uwtable
define hidden nofpclass(nan inf) float @luisa_fallback_wrapper_atomic_exchange_float(ptr nocapture noundef %0, float noundef nofpclass(nan inf) %1) #9 {
  %3 = bitcast float %1 to i32
  %4 = atomicrmw xchg ptr %0, i32 %3 monotonic, align 4
  %5 = bitcast i32 %4 to float
  ret float %5
}

; Function Attrs: alwaysinline mustprogress nofree norecurse nounwind willreturn memory(argmem: readwrite) uwtable
define hidden i32 @luisa_fallback_wrapper_atomic_compare_exchange_int(ptr nocapture noundef %0, i32 noundef %1, i32 noundef %2) #9 {
  %4 = cmpxchg weak ptr %0, i32 %1, i32 %2 monotonic monotonic, align 4
  %5 = extractvalue { i32, i1 } %4, 0
  ret i32 %5
}

; Function Attrs: alwaysinline mustprogress nofree norecurse nounwind willreturn memory(argmem: readwrite) uwtable
define hidden i32 @luisa_fallback_wrapper_atomic_compare_exchange_uint(ptr nocapture noundef %0, i32 noundef %1, i32 noundef %2) #9 {
  %4 = cmpxchg weak ptr %0, i32 %1, i32 %2 monotonic monotonic, align 4
  %5 = extractvalue { i32, i1 } %4, 0
  ret i32 %5
}

; Function Attrs: alwaysinline mustprogress nofree norecurse nounwind willreturn memory(argmem: readwrite) uwtable
define hidden nofpclass(nan inf) float @luisa_fallback_wrapper_atomic_compare_exchange_float(ptr nocapture noundef %0, float noundef nofpclass(nan inf) %1, float noundef nofpclass(nan inf) %2) #9 {
  %4 = bitcast float %2 to i32
  %5 = bitcast float %1 to i32
  %6 = cmpxchg weak ptr %0, i32 %5, i32 %4 monotonic monotonic, align 4
  %7 = extractvalue { i32, i1 } %6, 1
  %8 = extractvalue { i32, i1 } %6, 0
  %9 = bitcast i32 %8 to float
  %10 = select i1 %7, float %1, float %9
  ret float %10
}

; Function Attrs: alwaysinline mustprogress nofree norecurse nounwind willreturn memory(argmem: readwrite) uwtable
define hidden i32 @luisa_fallback_wrapper_atomic_fetch_add_int(ptr nocapture noundef %0, i32 noundef %1) #9 {
  %3 = atomicrmw add ptr %0, i32 %1 monotonic, align 4
  ret i32 %3
}

; Function Attrs: alwaysinline mustprogress nofree norecurse nounwind willreturn memory(argmem: readwrite) uwtable
define hidden i32 @luisa_fallback_wrapper_atomic_fetch_add_uint(ptr nocapture noundef %0, i32 noundef %1) #9 {
  %3 = atomicrmw add ptr %0, i32 %1 monotonic, align 4
  ret i32 %3
}

; Function Attrs: alwaysinline mustprogress nofree norecurse nounwind memory(argmem: readwrite) uwtable
define hidden nofpclass(nan inf) float @luisa_fallback_wrapper_atomic_fetch_add_float(ptr nocapture noundef %0, float noundef nofpclass(nan inf) %1) #10 {
  br label %3

3:                                                ; preds = %3, %2
  %4 = load float, ptr %0, align 4, !tbaa !13
  %5 = fadd fast float %4, %1
  %6 = bitcast float %5 to i32
  %7 = bitcast float %4 to i32
  %8 = cmpxchg weak ptr %0, i32 %7, i32 %6 monotonic monotonic, align 4
  %9 = extractvalue { i32, i1 } %8, 1
  br i1 %9, label %10, label %3

10:                                               ; preds = %3
  ret float %4
}

; Function Attrs: alwaysinline mustprogress nofree norecurse nounwind willreturn memory(argmem: readwrite) uwtable
define hidden i32 @luisa_fallback_wrapper_atomic_fetch_sub_int(ptr nocapture noundef %0, i32 noundef %1) #9 {
  %3 = atomicrmw sub ptr %0, i32 %1 monotonic, align 4
  ret i32 %3
}

; Function Attrs: alwaysinline mustprogress nofree norecurse nounwind willreturn memory(argmem: readwrite) uwtable
define hidden i32 @luisa_fallback_wrapper_atomic_fetch_sub_uint(ptr nocapture noundef %0, i32 noundef %1) #9 {
  %3 = atomicrmw sub ptr %0, i32 %1 monotonic, align 4
  ret i32 %3
}

; Function Attrs: alwaysinline mustprogress nofree norecurse nounwind memory(argmem: readwrite) uwtable
define hidden nofpclass(nan inf) float @luisa_fallback_wrapper_atomic_fetch_sub_float(ptr nocapture noundef %0, float noundef nofpclass(nan inf) %1) #10 {
  br label %3

3:                                                ; preds = %3, %2
  %4 = load float, ptr %0, align 4, !tbaa !13
  %5 = fsub fast float %4, %1
  %6 = bitcast float %5 to i32
  %7 = bitcast float %4 to i32
  %8 = cmpxchg weak ptr %0, i32 %7, i32 %6 monotonic monotonic, align 4
  %9 = extractvalue { i32, i1 } %8, 1
  br i1 %9, label %10, label %3

10:                                               ; preds = %3
  ret float %4
}

; Function Attrs: alwaysinline mustprogress nofree norecurse nounwind willreturn memory(argmem: readwrite) uwtable
define hidden i32 @luisa_fallback_wrapper_atomic_fetch_and_int(ptr nocapture noundef %0, i32 noundef %1) #9 {
  %3 = atomicrmw and ptr %0, i32 %1 monotonic, align 4
  ret i32 %3
}

; Function Attrs: alwaysinline mustprogress nofree norecurse nounwind willreturn memory(argmem: readwrite) uwtable
define hidden i32 @luisa_fallback_wrapper_atomic_fetch_and_uint(ptr nocapture noundef %0, i32 noundef %1) #9 {
  %3 = atomicrmw and ptr %0, i32 %1 monotonic, align 4
  ret i32 %3
}

; Function Attrs: alwaysinline mustprogress nofree norecurse nounwind willreturn memory(argmem: readwrite) uwtable
define hidden i32 @luisa_fallback_wrapper_atomic_fetch_or_int(ptr nocapture noundef %0, i32 noundef %1) #9 {
  %3 = atomicrmw or ptr %0, i32 %1 monotonic, align 4
  ret i32 %3
}

; Function Attrs: alwaysinline mustprogress nofree norecurse nounwind willreturn memory(argmem: readwrite) uwtable
define hidden i32 @luisa_fallback_wrapper_atomic_fetch_or_uint(ptr nocapture noundef %0, i32 noundef %1) #9 {
  %3 = atomicrmw or ptr %0, i32 %1 monotonic, align 4
  ret i32 %3
}

; Function Attrs: alwaysinline mustprogress nofree norecurse nounwind willreturn memory(argmem: readwrite) uwtable
define hidden i32 @luisa_fallback_wrapper_atomic_fetch_xor_int(ptr nocapture noundef %0, i32 noundef %1) #9 {
  %3 = atomicrmw xor ptr %0, i32 %1 monotonic, align 4
  ret i32 %3
}

; Function Attrs: alwaysinline mustprogress nofree norecurse nounwind willreturn memory(argmem: readwrite) uwtable
define hidden i32 @luisa_fallback_wrapper_atomic_fetch_xor_uint(ptr nocapture noundef %0, i32 noundef %1) #9 {
  %3 = atomicrmw xor ptr %0, i32 %1 monotonic, align 4
  ret i32 %3
}

; Function Attrs: alwaysinline mustprogress nofree norecurse nounwind willreturn memory(argmem: readwrite) uwtable
define hidden i32 @luisa_fallback_wrapper_atomic_fetch_min_int(ptr nocapture noundef %0, i32 noundef %1) #9 {
  %3 = atomicrmw min ptr %0, i32 %1 monotonic, align 4
  ret i32 %3
}

; Function Attrs: alwaysinline mustprogress nofree norecurse nounwind willreturn memory(argmem: readwrite) uwtable
define hidden i32 @luisa_fallback_wrapper_atomic_fetch_min_uint(ptr nocapture noundef %0, i32 noundef %1) #9 {
  %3 = atomicrmw umin ptr %0, i32 %1 monotonic, align 4
  ret i32 %3
}

; Function Attrs: alwaysinline mustprogress nofree norecurse nounwind memory(argmem: readwrite) uwtable
define hidden nofpclass(nan inf) float @luisa_fallback_wrapper_atomic_fetch_min_float(ptr nocapture noundef %0, float noundef nofpclass(nan inf) %1) #10 {
  %3 = bitcast float %1 to i32
  br label %4

4:                                                ; preds = %7, %2
  %5 = load float, ptr %0, align 4, !tbaa !13
  %6 = fcmp fast ugt float %5, %1
  br i1 %6, label %7, label %11

7:                                                ; preds = %4
  %8 = bitcast float %5 to i32
  %9 = cmpxchg weak ptr %0, i32 %8, i32 %3 monotonic monotonic, align 4
  %10 = extractvalue { i32, i1 } %9, 1
  br i1 %10, label %11, label %4

11:                                               ; preds = %7, %4
  ret float %5
}

; Function Attrs: alwaysinline mustprogress nofree norecurse nounwind willreturn memory(argmem: readwrite) uwtable
define hidden i32 @luisa_fallback_wrapper_atomic_fetch_max_int(ptr nocapture noundef %0, i32 noundef %1) #9 {
  %3 = atomicrmw max ptr %0, i32 %1 monotonic, align 4
  ret i32 %3
}

; Function Attrs: alwaysinline mustprogress nofree norecurse nounwind willreturn memory(argmem: readwrite) uwtable
define hidden i32 @luisa_fallback_wrapper_atomic_fetch_max_uint(ptr nocapture noundef %0, i32 noundef %1) #9 {
  %3 = atomicrmw umax ptr %0, i32 %1 monotonic, align 4
  ret i32 %3
}

; Function Attrs: alwaysinline mustprogress nofree norecurse nounwind memory(argmem: readwrite) uwtable
define hidden nofpclass(nan inf) float @luisa_fallback_wrapper_atomic_fetch_max_float(ptr nocapture noundef %0, float noundef nofpclass(nan inf) %1) #10 {
  %3 = bitcast float %1 to i32
  br label %4

4:                                                ; preds = %7, %2
  %5 = load float, ptr %0, align 4, !tbaa !13
  %6 = fcmp fast ult float %5, %1
  br i1 %6, label %7, label %11

7:                                                ; preds = %4
  %8 = bitcast float %5 to i32
  %9 = cmpxchg weak ptr %0, i32 %8, i32 %3 monotonic monotonic, align 4
  %10 = extractvalue { i32, i1 } %9, 1
  br i1 %10, label %11, label %4

11:                                               ; preds = %7, %4
  ret float %5
}

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare i32 @llvm.umax.i32(i32, i32) #11

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare i16 @llvm.umax.i16(i16, i16) #11

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.vector.reduce.fadd.v4f32(float, <4 x float>) #11

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare <2 x i16> @llvm.umax.v2i16(<2 x i16>, <2 x i16>) #11

attributes #0 = { alwaysinline mustprogress nofree norecurse nosync nounwind willreturn memory(argmem: readwrite) uwtable "approx-func-fp-math"="true" "denormal-fp-math"="preserve-sign,preserve-sign" "min-legal-vector-width"="0" "no-infs-fp-math"="true" "no-nans-fp-math"="true" "no-signed-zeros-fp-math"="true" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cmov,+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" "unsafe-fp-math"="true" }
attributes #1 = { mustprogress nocallback nofree nosync nounwind willreturn memory(argmem: readwrite) }
attributes #2 = { mustprogress nocallback nofree nounwind willreturn memory(argmem: readwrite) }
attributes #3 = { alwaysinline mustprogress nofree norecurse nosync nounwind willreturn memory(argmem: read) uwtable "approx-func-fp-math"="true" "denormal-fp-math"="preserve-sign,preserve-sign" "min-legal-vector-width"="0" "no-infs-fp-math"="true" "no-nans-fp-math"="true" "no-signed-zeros-fp-math"="true" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cmov,+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" "unsafe-fp-math"="true" }
attributes #4 = { alwaysinline mustprogress nounwind uwtable "approx-func-fp-math"="true" "denormal-fp-math"="preserve-sign,preserve-sign" "min-legal-vector-width"="0" "no-infs-fp-math"="true" "no-nans-fp-math"="true" "no-signed-zeros-fp-math"="true" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cmov,+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" "unsafe-fp-math"="true" }
attributes #5 = { nounwind "approx-func-fp-math"="true" "denormal-fp-math"="preserve-sign,preserve-sign" "no-infs-fp-math"="true" "no-nans-fp-math"="true" "no-signed-zeros-fp-math"="true" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cmov,+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" "unsafe-fp-math"="true" }
attributes #6 = { alwaysinline mustprogress nounwind uwtable "approx-func-fp-math"="true" "denormal-fp-math"="preserve-sign,preserve-sign" "min-legal-vector-width"="64" "no-infs-fp-math"="true" "no-nans-fp-math"="true" "no-signed-zeros-fp-math"="true" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cmov,+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" "unsafe-fp-math"="true" }
attributes #7 = { alwaysinline mustprogress nofree norecurse nosync nounwind willreturn memory(read, argmem: readwrite, inaccessiblemem: none) uwtable "approx-func-fp-math"="true" "denormal-fp-math"="preserve-sign,preserve-sign" "min-legal-vector-width"="0" "no-infs-fp-math"="true" "no-nans-fp-math"="true" "no-signed-zeros-fp-math"="true" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cmov,+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" "unsafe-fp-math"="true" }
attributes #8 = { alwaysinline mustprogress nofree norecurse nosync nounwind willreturn memory(write, argmem: readwrite, inaccessiblemem: none) uwtable "approx-func-fp-math"="true" "denormal-fp-math"="preserve-sign,preserve-sign" "min-legal-vector-width"="0" "no-infs-fp-math"="true" "no-nans-fp-math"="true" "no-signed-zeros-fp-math"="true" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cmov,+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" "unsafe-fp-math"="true" }
attributes #9 = { alwaysinline mustprogress nofree norecurse nounwind willreturn memory(argmem: readwrite) uwtable "approx-func-fp-math"="true" "denormal-fp-math"="preserve-sign,preserve-sign" "min-legal-vector-width"="0" "no-infs-fp-math"="true" "no-nans-fp-math"="true" "no-signed-zeros-fp-math"="true" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cmov,+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" "unsafe-fp-math"="true" }
attributes #10 = { alwaysinline mustprogress nofree norecurse nounwind memory(argmem: readwrite) uwtable "approx-func-fp-math"="true" "denormal-fp-math"="preserve-sign,preserve-sign" "min-legal-vector-width"="0" "no-infs-fp-math"="true" "no-nans-fp-math"="true" "no-signed-zeros-fp-math"="true" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cmov,+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" "unsafe-fp-math"="true" }
attributes #11 = { nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #12 = { nounwind }

!llvm.linker.options = !{}
!llvm.module.flags = !{!0, !1, !2, !3}
!llvm.ident = !{!4}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 8, !"PIC Level", i32 2}
!2 = !{i32 7, !"PIE Level", i32 2}
!3 = !{i32 7, !"uwtable", i32 2}
!4 = !{!"Ubuntu clang version 18.1.3 (1ubuntu1)"}
!5 = !{i64 0, i64 16, !6}
!6 = !{!7, !7, i64 0}
!7 = !{!"omnipotent char", !8, i64 0}
!8 = !{!"Simple C++ TBAA"}
!9 = !{i64 0, i64 8, !6}
!10 = !{i64 0, i64 48, !6}
!11 = !{i64 0, i64 32, !6}
!12 = !{i64 0, i64 64, !6}
!13 = !{!14, !14, i64 0}
!14 = !{!"float", !7, i64 0}
!15 = !{!16, !14, i64 8}
!16 = !{!"_ZTS6float3", !14, i64 0, !14, i64 4, !14, i64 8}
!17 = !{!18, !19, i64 0}
!18 = !{!"_ZTS17PackedTextureView", !19, i64 0, !20, i64 8}
!19 = !{!"any pointer", !7, i64 0}
!20 = !{!"long", !7, i64 0}
!21 = !{!18, !20, i64 8}
!22 = !{!23, !24, i64 0}
!23 = !{!"_ZTS5uint2", !24, i64 0, !24, i64 4}
!24 = !{!"int", !7, i64 0}
!25 = !{!23, !24, i64 4}
!26 = !{i64 0, i64 4, !27, i64 4, i64 4, !27, i64 8, i64 4, !27, i64 12, i64 4, !27}
!27 = !{!24, !24, i64 0}
!28 = !{i64 0, i64 4, !27, i64 4, i64 4, !27}
!29 = !{i64 0, i64 4, !13, i64 4, i64 4, !13, i64 8, i64 4, !13, i64 12, i64 4, !13}
!30 = !{i64 0, i64 4, !13, i64 4, i64 4, !13}
!31 = !{!32, !24, i64 0}
!32 = !{!"_ZTS5uint3", !24, i64 0, !24, i64 4, !24, i64 8}
!33 = !{!32, !24, i64 4}
!34 = !{!32, !24, i64 8}
!35 = !{i64 0, i64 4, !27}
!36 = !{i64 0, i64 4, !27, i64 4, i64 4, !27, i64 8, i64 4, !27}
!37 = !{!38, !19, i64 0}
!38 = !{!"_ZTS17BindlessArrayView", !19, i64 0, !20, i64 8}
!39 = !{!40, !19, i64 16}
!40 = !{!"_ZTS12BindlessSlot", !19, i64 0, !20, i64 8, !19, i64 16, !19, i64 24}
!41 = !{!40, !20, i64 8}
!42 = !{!43, !14, i64 0}
!43 = !{!"_ZTS6float2", !14, i64 0, !14, i64 4}
!44 = !{!43, !14, i64 4}
!45 = !{!40, !19, i64 24}
!46 = !{!16, !14, i64 0}
!47 = !{!16, !14, i64 4}
!48 = !{!49, !49, i64 0}
!49 = !{!"short", !7, i64 0}
!50 = !{!51, !19, i64 0}
!51 = !{!"_ZTS9AccelView", !19, i64 0, !19, i64 8}
!52 = !{!53, !14, i64 12}
!53 = !{!"_ZTS3Ray", !7, i64 0, !14, i64 12, !7, i64 16, !14, i64 28}
!54 = !{!53, !14, i64 28}
!55 = !{i64 0, i64 4, !27, i64 4, i64 4, !27, i64 8, i64 4, !13, i64 12, i64 4, !13, i64 16, i64 4, !13}
!56 = !{!57, !57, i64 0}
!57 = !{!"bool", !7, i64 0}
!58 = !{!51, !19, i64 8}
!59 = !{!60, !24, i64 52}
!60 = !{!"_ZTS13AccelInstance", !7, i64 0, !7, i64 48, !57, i64 49, !57, i64 50, !24, i64 52, !19, i64 56}
!61 = !{!60, !7, i64 48}
!62 = !{!60, !57, i64 50}
!63 = !{!60, !57, i64 49}
